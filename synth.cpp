//----------------------------------------------------------
// name: "synth.dsp.tmp"
//
// Code generated with Faust 2.68.1 (https://faust.grame.fr)
//----------------------------------------------------------

/* link with : "" */
#include "fastpow.h"
#include <math.h>

extern "C" {
    #include "ch.h"
    #include "hal.h"
    #include "synth.h"
}

#define max(x,y) (x>y?x:y)
#define min(x,y) (x<y?x:y)

#define MAX_VAL (1<<23)
#define VOLUME_FILTER 0.99f

class dsp {
	protected:
		int fSamplingFreq;
};

struct Meta {
    virtual void declare(const char* key, const char* value) = 0;
};

// variables
synth_interface_t synth_interface;

static float dump;
float volume = 1.0f;

static int32_t *outbuf;
static int32_t *inbuf;
static float output0[CHANNEL_BUFFER_SIZE] = {0.0};
static float output1[CHANNEL_BUFFER_SIZE] = {0.0};
static float* output[2] = {output0, output1};

// Intrinsics

// Class
#ifndef FAUSTFLOAT
#define FAUSTFLOAT float
#endif 


#ifndef FAUSTCLASS 
#define FAUSTCLASS mydsp
#endif

class mydsp : public dsp {
  private:
	int 	iVec0[2];
	float 	fConst0;
	float 	fConst4;
	float 	fConst6;
	float 	fConst8;
	float 	fConst12;
	float 	fConst14;
	float 	fConst16;
	FAUSTFLOAT 	fslider0;
	FAUSTFLOAT 	fslider1;
	float 	fVec1[2];
	int 	iVec2[2];
	int 	iRec5[2];
	int 	iRec4[2];
	float 	fConst17;
	FAUSTFLOAT 	fslider2;
	int 	iRec6[2];
	float 	fRec7[2];
	int 	iRec8[2];
	float 	fRec9[2];
	float 	fRec10[2];
	float 	fConst18;
	float 	fRec12[2];
	float 	fRec11[2];
	FAUSTFLOAT 	fbargraph0;
	float 	fRec2[3];
	float 	fConst19;
	float 	fConst20;
	float 	fConst21;
	float 	fConst22;
	float 	fConst23;
	int 	iVec3[2];
	int 	iRec14[2];
	float 	fRec15[2];
	float 	fRec16[2];
	float 	fRec17[2];
	float 	fRec13[2];
	float 	fRec3[2];
	float 	fRec1[3];
	float 	fConst24;
	FAUSTFLOAT 	fslider3;
	float 	fRec18[2];
	float 	fRec21[2];
	float 	fVec4[2];
	float 	fConst25;
	float 	fVec5[4096];
	float 	fConst26;
	float 	fRec20[2];
	float 	fConst27;
	FAUSTFLOAT 	fslider4;
	FAUSTFLOAT 	fslider5;
	float 	fVec6[2];
	int 	iVec7[2];
	int 	iRec25[2];
	FAUSTFLOAT 	fslider6;
	int 	iRec26[2];
	float 	fRec27[2];
	int 	iRec28[2];
	float 	fRec29[2];
	float 	fRec30[2];
	float 	fRec32[2];
	float 	fRec31[2];
	FAUSTFLOAT 	fbargraph1;
	float 	fRec23[3];
	int 	iVec8[2];
	int 	iRec34[2];
	float 	fRec35[2];
	float 	fRec36[2];
	float 	fRec37[2];
	float 	fRec33[2];
	float 	fRec24[2];
	float 	fRec22[3];
	FAUSTFLOAT 	fslider7;
	float 	fRec38[2];
	float 	fRec41[2];
	float 	fVec9[2];
	float 	fVec10[4096];
	float 	fRec40[2];
	FAUSTFLOAT 	fslider8;
	FAUSTFLOAT 	fslider9;
	float 	fVec11[2];
	int 	iVec12[2];
	int 	iRec45[2];
	FAUSTFLOAT 	fslider10;
	int 	iRec46[2];
	float 	fRec47[2];
	int 	iRec48[2];
	float 	fRec49[2];
	float 	fRec50[2];
	float 	fRec52[2];
	float 	fRec51[2];
	FAUSTFLOAT 	fbargraph2;
	float 	fRec43[3];
	int 	iVec13[2];
	int 	iRec54[2];
	float 	fRec55[2];
	float 	fRec56[2];
	float 	fRec57[2];
	float 	fRec53[2];
	float 	fRec44[2];
	float 	fRec42[3];
	FAUSTFLOAT 	fslider11;
	float 	fRec58[2];
	float 	fRec61[2];
	float 	fVec14[2];
	float 	fVec15[4096];
	float 	fRec60[2];
	FAUSTFLOAT 	fslider12;
	FAUSTFLOAT 	fslider13;
	float 	fVec16[2];
	int 	iVec17[2];
	int 	iRec65[2];
	FAUSTFLOAT 	fslider14;
	int 	iRec66[2];
	float 	fRec67[2];
	int 	iRec68[2];
	float 	fRec69[2];
	float 	fRec70[2];
	float 	fRec72[2];
	float 	fRec71[2];
	FAUSTFLOAT 	fbargraph3;
	float 	fRec63[3];
	int 	iVec18[2];
	int 	iRec74[2];
	float 	fRec75[2];
	float 	fRec76[2];
	float 	fRec77[2];
	float 	fRec73[2];
	float 	fRec64[2];
	float 	fRec62[3];
	FAUSTFLOAT 	fslider15;
	float 	fRec78[2];
	float 	fRec81[2];
	float 	fVec19[2];
	float 	fVec20[4096];
	float 	fRec80[2];
	FAUSTFLOAT 	fslider16;
	FAUSTFLOAT 	fslider17;
	float 	fVec21[2];
	int 	iVec22[2];
	int 	iRec85[2];
	FAUSTFLOAT 	fslider18;
	int 	iRec86[2];
	float 	fRec87[2];
	int 	iRec88[2];
	float 	fRec89[2];
	float 	fRec90[2];
	float 	fRec92[2];
	float 	fRec91[2];
	FAUSTFLOAT 	fbargraph4;
	float 	fRec83[3];
	int 	iVec23[2];
	int 	iRec94[2];
	float 	fRec95[2];
	float 	fRec96[2];
	float 	fRec97[2];
	float 	fRec93[2];
	float 	fRec84[2];
	float 	fRec82[3];
	FAUSTFLOAT 	fslider19;
	float 	fRec98[2];
	float 	fRec101[2];
	float 	fVec24[2];
	float 	fVec25[4096];
	float 	fRec100[2];
	FAUSTFLOAT 	fslider20;
	FAUSTFLOAT 	fslider21;
	float 	fVec26[2];
	int 	iVec27[2];
	int 	iRec105[2];
	FAUSTFLOAT 	fslider22;
	int 	iRec106[2];
	float 	fRec107[2];
	int 	iRec108[2];
	float 	fRec109[2];
	float 	fRec110[2];
	float 	fRec112[2];
	float 	fRec111[2];
	FAUSTFLOAT 	fbargraph5;
	float 	fRec103[3];
	int 	iVec28[2];
	int 	iRec114[2];
	float 	fRec115[2];
	float 	fRec116[2];
	float 	fRec117[2];
	float 	fRec113[2];
	float 	fRec104[2];
	float 	fRec102[3];
	FAUSTFLOAT 	fslider23;
	float 	fRec118[2];
	float 	fRec121[2];
	float 	fVec29[2];
	float 	fVec30[4096];
	float 	fRec120[2];
	float 	fRec0[3];
	float 	fConst28;
	int 	IOTA;
	int fSampleRate;

  public:
	virtual void metadata(Meta* m) { 
		m->declare("basics.lib/name", "Faust Basic Element Library");
		m->declare("basics.lib/peakholder:author", "Dario Sanfilippo");
		m->declare("basics.lib/peakholder:copyright", "Copyright (C) 2022 Dario Sanfilippo <sanfilippo.dario@gmail.com>");
		m->declare("basics.lib/peakholder:license", "MIT-style STK-4.3 license");
		m->declare("basics.lib/tabulateNd", "Copyright (C) 2023 Bart Brouns <bart@magnetophon.nl>");
		m->declare("basics.lib/version", "1.11.1");
		m->declare("fast.lib/author", "Piers Titus van der Torren (pierstitus@toverlamp.org)");
		m->declare("fast.lib/licence", "Apache-2.0");
		m->declare("fast.lib/name", "Faust Fast Approximations Library");
		m->declare("filename", "synth.dsp.tmp");
		m->declare("filters.lib/lowpass0_highpass1", "Copyright (C) 2003-2019 by Julius O. Smith III <jos@ccrma.stanford.edu>");
		m->declare("filters.lib/name", "Faust Filters Library");
		m->declare("filters.lib/pole:author", "Julius O. Smith III");
		m->declare("filters.lib/pole:copyright", "Copyright (C) 2003-2019 by Julius O. Smith III <jos@ccrma.stanford.edu>");
		m->declare("filters.lib/pole:license", "MIT-style STK-4.3 license");
		m->declare("filters.lib/version", "1.3.0");
		m->declare("maths.lib/author", "GRAME");
		m->declare("maths.lib/copyright", "GRAME");
		m->declare("maths.lib/license", "LGPL with exception");
		m->declare("maths.lib/name", "Faust Math Library");
		m->declare("maths.lib/version", "2.6.0");
		m->declare("name", "synth.dsp.tmp");
		m->declare("oscillators.lib/lf_sawpos:author", "Bart Brouns, revised by StÃ©phane Letz");
		m->declare("oscillators.lib/lf_sawpos:licence", "STK-4.3");
		m->declare("oscillators.lib/name", "Faust Oscillator Library");
		m->declare("oscillators.lib/saw2ptr:author", "Julius O. Smith III");
		m->declare("oscillators.lib/saw2ptr:license", "STK-4.3");
		m->declare("oscillators.lib/sawN:author", "Julius O. Smith III");
		m->declare("oscillators.lib/sawN:license", "STK-4.3");
		m->declare("oscillators.lib/version", "1.4.0");
		m->declare("platform.lib/name", "Generic Platform Library");
		m->declare("platform.lib/version", "1.3.0");
		m->declare("signals.lib/name", "Faust Signal Routing Library");
		m->declare("signals.lib/version", "1.3.0");
	}

	virtual int getNumInputs() { return 0; }
	virtual int getNumOutputs() { return 1; }
	static void classInit(int sample_rate) {
	}
	virtual void instanceConstants(int sample_rate) {
		fSampleRate = sample_rate;
		fConst0 = min(1.92e+05f, max(1.0f, float(fSampleRate)));
		float 	fConst1 = powf(fConst0,2.0f);
		float 	fConst2 = powf((251.32741f / fConst0),2.0f);
		float 	fConst3 = ((fConst2 * ((0.2033f * fConst2) + 0.31755f)) + 1.0f);
		fConst4 = (2.0f * ((63165.47f * (powf(fConst3,2.0f) / fConst1)) + -1.0f));
		float 	fConst5 = (63165.47f * (fConst3 / fConst0));
		fConst6 = (((fConst3 * (fConst5 + -191.85298f)) / fConst0) + 1.0f);
		float 	fConst7 = (((fConst3 * (fConst5 + 191.85298f)) / fConst0) + 1.0f);
		fConst8 = (1.0f / fConst7);
		float 	fConst9 = powf((62.831852f / fConst0),2.0f);
		float 	fConst10 = ((fConst9 * ((0.2033f * fConst9) + 0.31755f)) + 1.0f);
		float 	fConst11 = powf(fConst10,2.0f);
		fConst12 = (2.0f * ((3947.8418f * (fConst11 / fConst1)) + -1.0f));
		float 	fConst13 = (3947.8418f * (fConst10 / fConst0));
		fConst14 = (((fConst10 * (fConst13 + -88.49557f)) / fConst0) + 1.0f);
		float 	fConst15 = (((fConst10 * (fConst13 + 88.49557f)) / fConst0) + 1.0f);
		fConst16 = (1.0f / fConst15);
		fConst17 = (1.0f / fConst0);
		fConst18 = (1e+04f / fConst0);
		fConst19 = (0.05f * fConst0);
		fConst20 = (0.2f * fConst0);
		fConst21 = (0.3f * fConst0);
		fConst22 = (0.1f * fConst0);
		fConst23 = (3.0f * fConst0);
		fConst24 = (fConst11 / (fConst1 * fConst15));
		fConst25 = (0.25f * fConst0);
		fConst26 = (0.5f * fConst0);
		fConst27 = (32.703197f / fConst0);
		fConst28 = (0.0f - (2.0f / fConst7));
	}
	virtual void instanceResetUserInterface() {
		fslider0 = 0.0f;
		fslider1 = 0.0f;
		fslider2 = 0.0f;
		fslider3 = 69.0f;
		fslider4 = 0.0f;
		fslider5 = 0.0f;
		fslider6 = 0.0f;
		fslider7 = 69.0f;
		fslider8 = 0.0f;
		fslider9 = 0.0f;
		fslider10 = 0.0f;
		fslider11 = 69.0f;
		fslider12 = 0.0f;
		fslider13 = 0.0f;
		fslider14 = 0.0f;
		fslider15 = 69.0f;
		fslider16 = 0.0f;
		fslider17 = 0.0f;
		fslider18 = 0.0f;
		fslider19 = 69.0f;
		fslider20 = 0.0f;
		fslider21 = 0.0f;
		fslider22 = 0.0f;
		fslider23 = 69.0f;
	}
	virtual void instanceClear() {
		for (int i=0; i<2; i++) iVec0[i] = 0;
		for (int i=0; i<2; i++) fVec1[i] = 0;
		for (int i=0; i<2; i++) iVec2[i] = 0;
		for (int i=0; i<2; i++) iRec5[i] = 0;
		for (int i=0; i<2; i++) iRec4[i] = 0;
		for (int i=0; i<2; i++) iRec6[i] = 0;
		for (int i=0; i<2; i++) fRec7[i] = 0;
		for (int i=0; i<2; i++) iRec8[i] = 0;
		for (int i=0; i<2; i++) fRec9[i] = 0;
		for (int i=0; i<2; i++) fRec10[i] = 0;
		for (int i=0; i<2; i++) fRec12[i] = 0;
		for (int i=0; i<2; i++) fRec11[i] = 0;
		for (int i=0; i<3; i++) fRec2[i] = 0;
		for (int i=0; i<2; i++) iVec3[i] = 0;
		for (int i=0; i<2; i++) iRec14[i] = 0;
		for (int i=0; i<2; i++) fRec15[i] = 0;
		for (int i=0; i<2; i++) fRec16[i] = 0;
		for (int i=0; i<2; i++) fRec17[i] = 0;
		for (int i=0; i<2; i++) fRec13[i] = 0;
		for (int i=0; i<2; i++) fRec3[i] = 0;
		for (int i=0; i<3; i++) fRec1[i] = 0;
		for (int i=0; i<2; i++) fRec18[i] = 0;
		for (int i=0; i<2; i++) fRec21[i] = 0;
		for (int i=0; i<2; i++) fVec4[i] = 0;
		for (int i=0; i<4096; i++) fVec5[i] = 0;
		for (int i=0; i<2; i++) fRec20[i] = 0;
		for (int i=0; i<2; i++) fVec6[i] = 0;
		for (int i=0; i<2; i++) iVec7[i] = 0;
		for (int i=0; i<2; i++) iRec25[i] = 0;
		for (int i=0; i<2; i++) iRec26[i] = 0;
		for (int i=0; i<2; i++) fRec27[i] = 0;
		for (int i=0; i<2; i++) iRec28[i] = 0;
		for (int i=0; i<2; i++) fRec29[i] = 0;
		for (int i=0; i<2; i++) fRec30[i] = 0;
		for (int i=0; i<2; i++) fRec32[i] = 0;
		for (int i=0; i<2; i++) fRec31[i] = 0;
		for (int i=0; i<3; i++) fRec23[i] = 0;
		for (int i=0; i<2; i++) iVec8[i] = 0;
		for (int i=0; i<2; i++) iRec34[i] = 0;
		for (int i=0; i<2; i++) fRec35[i] = 0;
		for (int i=0; i<2; i++) fRec36[i] = 0;
		for (int i=0; i<2; i++) fRec37[i] = 0;
		for (int i=0; i<2; i++) fRec33[i] = 0;
		for (int i=0; i<2; i++) fRec24[i] = 0;
		for (int i=0; i<3; i++) fRec22[i] = 0;
		for (int i=0; i<2; i++) fRec38[i] = 0;
		for (int i=0; i<2; i++) fRec41[i] = 0;
		for (int i=0; i<2; i++) fVec9[i] = 0;
		for (int i=0; i<4096; i++) fVec10[i] = 0;
		for (int i=0; i<2; i++) fRec40[i] = 0;
		for (int i=0; i<2; i++) fVec11[i] = 0;
		for (int i=0; i<2; i++) iVec12[i] = 0;
		for (int i=0; i<2; i++) iRec45[i] = 0;
		for (int i=0; i<2; i++) iRec46[i] = 0;
		for (int i=0; i<2; i++) fRec47[i] = 0;
		for (int i=0; i<2; i++) iRec48[i] = 0;
		for (int i=0; i<2; i++) fRec49[i] = 0;
		for (int i=0; i<2; i++) fRec50[i] = 0;
		for (int i=0; i<2; i++) fRec52[i] = 0;
		for (int i=0; i<2; i++) fRec51[i] = 0;
		for (int i=0; i<3; i++) fRec43[i] = 0;
		for (int i=0; i<2; i++) iVec13[i] = 0;
		for (int i=0; i<2; i++) iRec54[i] = 0;
		for (int i=0; i<2; i++) fRec55[i] = 0;
		for (int i=0; i<2; i++) fRec56[i] = 0;
		for (int i=0; i<2; i++) fRec57[i] = 0;
		for (int i=0; i<2; i++) fRec53[i] = 0;
		for (int i=0; i<2; i++) fRec44[i] = 0;
		for (int i=0; i<3; i++) fRec42[i] = 0;
		for (int i=0; i<2; i++) fRec58[i] = 0;
		for (int i=0; i<2; i++) fRec61[i] = 0;
		for (int i=0; i<2; i++) fVec14[i] = 0;
		for (int i=0; i<4096; i++) fVec15[i] = 0;
		for (int i=0; i<2; i++) fRec60[i] = 0;
		for (int i=0; i<2; i++) fVec16[i] = 0;
		for (int i=0; i<2; i++) iVec17[i] = 0;
		for (int i=0; i<2; i++) iRec65[i] = 0;
		for (int i=0; i<2; i++) iRec66[i] = 0;
		for (int i=0; i<2; i++) fRec67[i] = 0;
		for (int i=0; i<2; i++) iRec68[i] = 0;
		for (int i=0; i<2; i++) fRec69[i] = 0;
		for (int i=0; i<2; i++) fRec70[i] = 0;
		for (int i=0; i<2; i++) fRec72[i] = 0;
		for (int i=0; i<2; i++) fRec71[i] = 0;
		for (int i=0; i<3; i++) fRec63[i] = 0;
		for (int i=0; i<2; i++) iVec18[i] = 0;
		for (int i=0; i<2; i++) iRec74[i] = 0;
		for (int i=0; i<2; i++) fRec75[i] = 0;
		for (int i=0; i<2; i++) fRec76[i] = 0;
		for (int i=0; i<2; i++) fRec77[i] = 0;
		for (int i=0; i<2; i++) fRec73[i] = 0;
		for (int i=0; i<2; i++) fRec64[i] = 0;
		for (int i=0; i<3; i++) fRec62[i] = 0;
		for (int i=0; i<2; i++) fRec78[i] = 0;
		for (int i=0; i<2; i++) fRec81[i] = 0;
		for (int i=0; i<2; i++) fVec19[i] = 0;
		for (int i=0; i<4096; i++) fVec20[i] = 0;
		for (int i=0; i<2; i++) fRec80[i] = 0;
		for (int i=0; i<2; i++) fVec21[i] = 0;
		for (int i=0; i<2; i++) iVec22[i] = 0;
		for (int i=0; i<2; i++) iRec85[i] = 0;
		for (int i=0; i<2; i++) iRec86[i] = 0;
		for (int i=0; i<2; i++) fRec87[i] = 0;
		for (int i=0; i<2; i++) iRec88[i] = 0;
		for (int i=0; i<2; i++) fRec89[i] = 0;
		for (int i=0; i<2; i++) fRec90[i] = 0;
		for (int i=0; i<2; i++) fRec92[i] = 0;
		for (int i=0; i<2; i++) fRec91[i] = 0;
		for (int i=0; i<3; i++) fRec83[i] = 0;
		for (int i=0; i<2; i++) iVec23[i] = 0;
		for (int i=0; i<2; i++) iRec94[i] = 0;
		for (int i=0; i<2; i++) fRec95[i] = 0;
		for (int i=0; i<2; i++) fRec96[i] = 0;
		for (int i=0; i<2; i++) fRec97[i] = 0;
		for (int i=0; i<2; i++) fRec93[i] = 0;
		for (int i=0; i<2; i++) fRec84[i] = 0;
		for (int i=0; i<3; i++) fRec82[i] = 0;
		for (int i=0; i<2; i++) fRec98[i] = 0;
		for (int i=0; i<2; i++) fRec101[i] = 0;
		for (int i=0; i<2; i++) fVec24[i] = 0;
		for (int i=0; i<4096; i++) fVec25[i] = 0;
		for (int i=0; i<2; i++) fRec100[i] = 0;
		for (int i=0; i<2; i++) fVec26[i] = 0;
		for (int i=0; i<2; i++) iVec27[i] = 0;
		for (int i=0; i<2; i++) iRec105[i] = 0;
		for (int i=0; i<2; i++) iRec106[i] = 0;
		for (int i=0; i<2; i++) fRec107[i] = 0;
		for (int i=0; i<2; i++) iRec108[i] = 0;
		for (int i=0; i<2; i++) fRec109[i] = 0;
		for (int i=0; i<2; i++) fRec110[i] = 0;
		for (int i=0; i<2; i++) fRec112[i] = 0;
		for (int i=0; i<2; i++) fRec111[i] = 0;
		for (int i=0; i<3; i++) fRec103[i] = 0;
		for (int i=0; i<2; i++) iVec28[i] = 0;
		for (int i=0; i<2; i++) iRec114[i] = 0;
		for (int i=0; i<2; i++) fRec115[i] = 0;
		for (int i=0; i<2; i++) fRec116[i] = 0;
		for (int i=0; i<2; i++) fRec117[i] = 0;
		for (int i=0; i<2; i++) fRec113[i] = 0;
		for (int i=0; i<2; i++) fRec104[i] = 0;
		for (int i=0; i<3; i++) fRec102[i] = 0;
		for (int i=0; i<2; i++) fRec118[i] = 0;
		for (int i=0; i<2; i++) fRec121[i] = 0;
		for (int i=0; i<2; i++) fVec29[i] = 0;
		for (int i=0; i<4096; i++) fVec30[i] = 0;
		for (int i=0; i<2; i++) fRec120[i] = 0;
		for (int i=0; i<3; i++) fRec0[i] = 0;
		IOTA = 0;
	}
	virtual void init(int sample_rate) {
		classInit(sample_rate);
		instanceInit(sample_rate);
	}
	virtual void instanceInit(int sample_rate) {
		instanceConstants(sample_rate);
		instanceResetUserInterface();
		instanceClear();
	}

	virtual int getSampleRate() {
		return fSampleRate;
	}
	virtual void buildUserInterfaceEmbedded() {
		synth_interface.note[0] = &fslider23;
		synth_interface.pres[0] = &fslider20;
		synth_interface.vpres[0] = &fslider21;
		synth_interface.but_y[0] = &fslider22;
		synth_interface.note[1] = &fslider19;
		synth_interface.pres[1] = &fslider16;
		synth_interface.vpres[1] = &fslider17;
		synth_interface.but_y[1] = &fslider18;
		synth_interface.note[2] = &fslider15;
		synth_interface.pres[2] = &fslider12;
		synth_interface.vpres[2] = &fslider13;
		synth_interface.but_y[2] = &fslider14;
		synth_interface.note[3] = &fslider11;
		synth_interface.pres[3] = &fslider8;
		synth_interface.vpres[3] = &fslider9;
		synth_interface.but_y[3] = &fslider10;
		synth_interface.note[4] = &fslider7;
		synth_interface.pres[4] = &fslider4;
		synth_interface.vpres[4] = &fslider5;
		synth_interface.but_y[4] = &fslider6;
		synth_interface.note[5] = &fslider3;
		synth_interface.pres[5] = &fslider0;
		synth_interface.vpres[5] = &fslider1;
		synth_interface.but_y[5] = &fslider2;
	}
	virtual void compute (int count, FAUSTFLOAT** input, FAUSTFLOAT** output) {
		//zone1
		//zone2
		float 	fSlow0 = float(fslider0);
		float 	fSlow1 = float(fslider1);
		int 	iSlow2 = (fSlow1 == 0.0f);
		float 	fSlow3 = min(float(fslider2), 1.0f);
		float 	fSlow4 = (fConst0 * (((fSlow3 > 0.1f)) ? 0.0f : 6.0f));
		float 	fSlow5 = fabsf((0.0f - min(0.0f, fSlow3)));
		float 	fSlow6 = (fConst0 * (((fSlow3 < -0.1f)) ? 0.0f : 6.0f));
		float 	fSlow7 = fabsf(max(0.0f, fSlow3));
		float 	fSlow8 = fastpow2((0.083333336f * float(fslider3)));
		float 	fSlow9 = (8.175799f * fSlow8);
		float 	fSlow10 = max(1.1920929e-07f, fabsf(fSlow9));
		float 	fSlow11 = (fConst17 * fSlow10);
		float 	fSlow12 = (1.0f - (fConst0 / fSlow10));
		float 	fSlow13 = max(fSlow9, 23.44895f);
		float 	fSlow14 = max(2e+01f, fabsf(fSlow13));
		float 	fSlow15 = (fConst17 * fSlow14);
		float 	fSlow16 = (fConst25 / fSlow14);
		float 	fSlow17 = max(0.0f, min(2047.0f, (fConst26 / fSlow13)));
		int 	iSlow18 = int(fSlow17);
		int 	iSlow19 = (iSlow18 + 1);
		float 	fSlow20 = floorf(fSlow17);
		float 	fSlow21 = (fSlow17 - fSlow20);
		float 	fSlow22 = (fSlow20 + (1.0f - fSlow17));
		float 	fSlow23 = (fConst27 * fSlow8);
		float 	fSlow24 = float(fslider4);
		float 	fSlow25 = float(fslider5);
		int 	iSlow26 = (fSlow25 == 0.0f);
		float 	fSlow27 = min(float(fslider6), 1.0f);
		float 	fSlow28 = (fConst0 * (((fSlow27 > 0.1f)) ? 0.0f : 6.0f));
		float 	fSlow29 = fabsf((0.0f - min(0.0f, fSlow27)));
		float 	fSlow30 = (fConst0 * (((fSlow27 < -0.1f)) ? 0.0f : 6.0f));
		float 	fSlow31 = fabsf(max(0.0f, fSlow27));
		float 	fSlow32 = fastpow2((0.083333336f * float(fslider7)));
		float 	fSlow33 = (8.175799f * fSlow32);
		float 	fSlow34 = max(1.1920929e-07f, fabsf(fSlow33));
		float 	fSlow35 = (fConst17 * fSlow34);
		float 	fSlow36 = (1.0f - (fConst0 / fSlow34));
		float 	fSlow37 = max(fSlow33, 23.44895f);
		float 	fSlow38 = max(2e+01f, fabsf(fSlow37));
		float 	fSlow39 = (fConst17 * fSlow38);
		float 	fSlow40 = (fConst25 / fSlow38);
		float 	fSlow41 = max(0.0f, min(2047.0f, (fConst26 / fSlow37)));
		int 	iSlow42 = int(fSlow41);
		int 	iSlow43 = (iSlow42 + 1);
		float 	fSlow44 = floorf(fSlow41);
		float 	fSlow45 = (fSlow41 - fSlow44);
		float 	fSlow46 = (fSlow44 + (1.0f - fSlow41));
		float 	fSlow47 = (fConst27 * fSlow32);
		float 	fSlow48 = float(fslider8);
		float 	fSlow49 = float(fslider9);
		int 	iSlow50 = (fSlow49 == 0.0f);
		float 	fSlow51 = min(float(fslider10), 1.0f);
		float 	fSlow52 = (fConst0 * (((fSlow51 > 0.1f)) ? 0.0f : 6.0f));
		float 	fSlow53 = fabsf((0.0f - min(0.0f, fSlow51)));
		float 	fSlow54 = (fConst0 * (((fSlow51 < -0.1f)) ? 0.0f : 6.0f));
		float 	fSlow55 = fabsf(max(0.0f, fSlow51));
		float 	fSlow56 = fastpow2((0.083333336f * float(fslider11)));
		float 	fSlow57 = (8.175799f * fSlow56);
		float 	fSlow58 = max(1.1920929e-07f, fabsf(fSlow57));
		float 	fSlow59 = (fConst17 * fSlow58);
		float 	fSlow60 = (1.0f - (fConst0 / fSlow58));
		float 	fSlow61 = max(fSlow57, 23.44895f);
		float 	fSlow62 = max(2e+01f, fabsf(fSlow61));
		float 	fSlow63 = (fConst17 * fSlow62);
		float 	fSlow64 = (fConst25 / fSlow62);
		float 	fSlow65 = max(0.0f, min(2047.0f, (fConst26 / fSlow61)));
		int 	iSlow66 = int(fSlow65);
		int 	iSlow67 = (iSlow66 + 1);
		float 	fSlow68 = floorf(fSlow65);
		float 	fSlow69 = (fSlow65 - fSlow68);
		float 	fSlow70 = (fSlow68 + (1.0f - fSlow65));
		float 	fSlow71 = (fConst27 * fSlow56);
		float 	fSlow72 = float(fslider12);
		float 	fSlow73 = float(fslider13);
		int 	iSlow74 = (fSlow73 == 0.0f);
		float 	fSlow75 = min(float(fslider14), 1.0f);
		float 	fSlow76 = (fConst0 * (((fSlow75 > 0.1f)) ? 0.0f : 6.0f));
		float 	fSlow77 = fabsf((0.0f - min(0.0f, fSlow75)));
		float 	fSlow78 = (fConst0 * (((fSlow75 < -0.1f)) ? 0.0f : 6.0f));
		float 	fSlow79 = fabsf(max(0.0f, fSlow75));
		float 	fSlow80 = fastpow2((0.083333336f * float(fslider15)));
		float 	fSlow81 = (8.175799f * fSlow80);
		float 	fSlow82 = max(1.1920929e-07f, fabsf(fSlow81));
		float 	fSlow83 = (fConst17 * fSlow82);
		float 	fSlow84 = (1.0f - (fConst0 / fSlow82));
		float 	fSlow85 = max(fSlow81, 23.44895f);
		float 	fSlow86 = max(2e+01f, fabsf(fSlow85));
		float 	fSlow87 = (fConst17 * fSlow86);
		float 	fSlow88 = (fConst25 / fSlow86);
		float 	fSlow89 = max(0.0f, min(2047.0f, (fConst26 / fSlow85)));
		int 	iSlow90 = int(fSlow89);
		int 	iSlow91 = (iSlow90 + 1);
		float 	fSlow92 = floorf(fSlow89);
		float 	fSlow93 = (fSlow89 - fSlow92);
		float 	fSlow94 = (fSlow92 + (1.0f - fSlow89));
		float 	fSlow95 = (fConst27 * fSlow80);
		float 	fSlow96 = float(fslider16);
		float 	fSlow97 = float(fslider17);
		int 	iSlow98 = (fSlow97 == 0.0f);
		float 	fSlow99 = min(float(fslider18), 1.0f);
		float 	fSlow100 = (fConst0 * (((fSlow99 > 0.1f)) ? 0.0f : 6.0f));
		float 	fSlow101 = fabsf((0.0f - min(0.0f, fSlow99)));
		float 	fSlow102 = (fConst0 * (((fSlow99 < -0.1f)) ? 0.0f : 6.0f));
		float 	fSlow103 = fabsf(max(0.0f, fSlow99));
		float 	fSlow104 = fastpow2((0.083333336f * float(fslider19)));
		float 	fSlow105 = (8.175799f * fSlow104);
		float 	fSlow106 = max(1.1920929e-07f, fabsf(fSlow105));
		float 	fSlow107 = (fConst17 * fSlow106);
		float 	fSlow108 = (1.0f - (fConst0 / fSlow106));
		float 	fSlow109 = max(fSlow105, 23.44895f);
		float 	fSlow110 = max(2e+01f, fabsf(fSlow109));
		float 	fSlow111 = (fConst17 * fSlow110);
		float 	fSlow112 = (fConst25 / fSlow110);
		float 	fSlow113 = max(0.0f, min(2047.0f, (fConst26 / fSlow109)));
		int 	iSlow114 = int(fSlow113);
		int 	iSlow115 = (iSlow114 + 1);
		float 	fSlow116 = floorf(fSlow113);
		float 	fSlow117 = (fSlow113 - fSlow116);
		float 	fSlow118 = (fSlow116 + (1.0f - fSlow113));
		float 	fSlow119 = (fConst27 * fSlow104);
		float 	fSlow120 = float(fslider20);
		float 	fSlow121 = float(fslider21);
		int 	iSlow122 = (fSlow121 == 0.0f);
		float 	fSlow123 = min(float(fslider22), 1.0f);
		float 	fSlow124 = (fConst0 * (((fSlow123 > 0.1f)) ? 0.0f : 6.0f));
		float 	fSlow125 = fabsf((0.0f - min(0.0f, fSlow123)));
		float 	fSlow126 = (fConst0 * (((fSlow123 < -0.1f)) ? 0.0f : 6.0f));
		float 	fSlow127 = fabsf(max(0.0f, fSlow123));
		float 	fSlow128 = fastpow2((0.083333336f * float(fslider23)));
		float 	fSlow129 = (8.175799f * fSlow128);
		float 	fSlow130 = max(1.1920929e-07f, fabsf(fSlow129));
		float 	fSlow131 = (fConst17 * fSlow130);
		float 	fSlow132 = (1.0f - (fConst0 / fSlow130));
		float 	fSlow133 = max(fSlow129, 23.44895f);
		float 	fSlow134 = max(2e+01f, fabsf(fSlow133));
		float 	fSlow135 = (fConst17 * fSlow134);
		float 	fSlow136 = (fConst25 / fSlow134);
		float 	fSlow137 = max(0.0f, min(2047.0f, (fConst26 / fSlow133)));
		int 	iSlow138 = int(fSlow137);
		int 	iSlow139 = (iSlow138 + 1);
		float 	fSlow140 = floorf(fSlow137);
		float 	fSlow141 = (fSlow137 - fSlow140);
		float 	fSlow142 = (fSlow140 + (1.0f - fSlow137));
		float 	fSlow143 = (fConst27 * fSlow128);
		//zone2b
		//zone3
		FAUSTFLOAT* output0 = output[0];
		//LoopGraphScalar
		for (int i=0; i<count; i++) {
			iVec0[0] = 1;
			fVec1[0] = fSlow1;
			int 	iTemp0 = (fSlow1 != fVec1[1]);
			iVec2[0] = iTemp0;
			int 	iTemp1 = ((iVec2[1] <= 0) & (iVec2[0] > 0));
			iRec5[0] = (iRec5[1] + 1);
			int 	iTemp2 = (iRec5[0] + -1);
			iRec4[0] = ((iRec4[1] * (1 - iTemp1)) + (iTemp2 * iTemp1));
			float 	fTemp3 = (((((fConst17 * float((iRec5[0] + (-1 - iRec4[0])))) > 0.1f) & iSlow2)) ? 0.0f : fSlow0);
			int 	iTemp4 = ((fSlow5 >= fRec7[1]) | (float(iRec6[1]) >= fSlow4));
			iRec6[0] = ((iTemp4) ? 0 : (iRec6[1] + 1));
			fRec7[0] = ((iTemp4) ? fSlow5 : fRec7[1]);
			int 	iTemp5 = ((fSlow7 >= fRec9[1]) | (float(iRec8[1]) >= fSlow6));
			iRec8[0] = ((iTemp5) ? 0 : (iRec8[1] + 1));
			fRec9[0] = ((iTemp5) ? fSlow7 : fRec9[1]);
			float 	fTemp6 = (((fRec9[0] > fRec7[0])) ? fRec9[0] : (-1.0f * fRec7[0]));
			float 	fTemp7 = fabsf(fTemp6);
			float 	fTemp8 = (1.0f - fTemp7);
			int 	iTemp9 = ((fTemp6 > 0.0f) + (1 - (fTemp6 < 0.0f)));
			int 	iTemp10 = (iTemp9 == 1);
			int 	iTemp11 = (iTemp9 == 0);
			fRec10[0] = fRec2[1];
			float 	fTemp12 = (fRec12[1] - fConst18);
			float 	fTemp13 = (fConst18 + fRec12[1]);
			fRec12[0] = (((fTemp13 < fSlow1)) ? fTemp13 : (((fTemp12 > fSlow1)) ? fTemp12 : fSlow1));
			fRec11[0] = (((fRec10[1] != fRec2[1])) ? fRec12[0] : max(fRec11[1], fRec12[0]));
			float 	fTemp14 = (fRec11[0] * ((((iTemp11) ? 2.0f : ((iTemp10) ? 1.3f : 0.5f)) * fTemp7) + (1.3f * fTemp8)));
			int 	iTemp15 = (fTemp3 <= 0.01f);
			int 	iTemp16 = (fTemp3 >= fRec3[1]);
			fbargraph0 = float((((fRec2[1] >= 3.0f)) ? (((fRec2[1] >= 5.0f)) ? ((iTemp15) ? 3 : ((iTemp16) ? 4 : 5)) : (((fRec2[1] >= 4.0f)) ? ((iTemp15) ? 3 : (((fTemp3 <= fRec3[1])) ? 5 : 4)) : (((iTemp15 & (fRec3[1] <= 0.001f))) ? 0 : (((fTemp3 > fRec3[1])) ? 1 : 3)))) : (((fRec2[1] >= 2.0f)) ? ((iTemp16) ? 4 : ((iTemp15) ? 3 : 2)) : (((fRec2[1] >= 1.0f)) ? (((fRec3[1] >= fTemp14)) ? 2 : 1) : (((fTemp3 > 0.0f)) ? 1 : 0)))));
			float 	fTemp17 = fbargraph0;
			fRec2[0] = fTemp17;
			int 	iTemp18 = (fTemp17 >= 1.0f);
			float 	fTemp19 = ((iTemp18) ? fConst19 : 0.0f);
			int 	iTemp20 = (fTemp17 >= 2.0f);
			int 	iTemp21 = (fTemp17 >= 4.0f);
			int 	iTemp22 = (fTemp17 >= 5.0f);
			int 	iTemp23 = (fTemp17 >= 3.0f);
			float 	fTemp24 = ((iTemp23) ? ((iTemp22) ? fConst22 : ((iTemp21) ? fConst22 : fConst21)) : ((iTemp20) ? fConst20 : fTemp19));
			float 	fTemp25 = ((fTemp7 * ((iTemp11) ? ((iTemp23) ? ((iTemp22) ? fConst21 : ((iTemp21) ? fConst21 : fConst23)) : ((iTemp20) ? fConst19 : ((iTemp18) ? fConst20 : 0.0f))) : ((iTemp10) ? fTemp24 : ((iTemp23) ? fConst19 : ((iTemp20) ? fConst19 : fTemp19))))) + (fTemp8 * fTemp24));
			int 	iTemp26 = (fRec2[1] != fRec2[2]);
			iVec3[0] = iTemp26;
			int 	iTemp27 = ((iVec3[1] <= 0) & (iVec3[0] > 0));
			iRec14[0] = ((iRec14[1] * (1 - iTemp27)) + (iTemp2 * iTemp27));
			float 	fTemp28 = floorf((2e+01f * (((fTemp25 > 0.0f)) ? (float((iRec5[0] + (-1 - iRec14[0]))) / fTemp25) : 0.0f)));
			float 	fTemp29 = (((fTemp28 >= 1e+01f)) ? (((fTemp28 >= 15.0f)) ? (((fTemp28 >= 18.0f)) ? (((fTemp28 >= 19.0f)) ? 0.0f : 0.01f) : (((fTemp28 >= 17.0f)) ? 0.03f : (((fTemp28 >= 16.0f)) ? 0.06f : 0.08f))) : (((fTemp28 >= 13.0f)) ? (((fTemp28 >= 14.0f)) ? 0.1f : 0.12f) : (((fTemp28 >= 12.0f)) ? 0.14f : (((fTemp28 >= 11.0f)) ? 0.16f : 0.19f)))) : (((fTemp28 >= 5.0f)) ? (((fTemp28 >= 8.0f)) ? (((fTemp28 >= 9.0f)) ? 0.22f : 0.26f) : (((fTemp28 >= 7.0f)) ? 0.3f : (((fTemp28 >= 6.0f)) ? 0.35f : 0.4f))) : (((fTemp28 >= 3.0f)) ? (((fTemp28 >= 4.0f)) ? 0.47f : 0.55f) : (((fTemp28 >= 2.0f)) ? 0.64f : (((fTemp28 >= 1.0f)) ? 0.74f : 0.86f)))));
			fRec15[0] = fRec2[1];
			int 	iTemp30 = (fRec15[1] == fRec2[1]);
			int 	iTemp31 = (fRec2[1] == 0.0f);
			fRec16[0] = ((iTemp31) ? fTemp3 : ((iTemp30) ? min(min(fRec16[1], fTemp3), fRec3[1]) : min(fTemp3, fRec3[1])));
			fRec17[0] = ((iTemp31) ? fTemp3 : ((iTemp30) ? max(max(fRec17[1], fTemp3), fRec3[1]) : max(fTemp3, fRec3[1])));
			int 	iTemp32 = (fRec2[1] == 3.0f);
			float 	fTemp33 = (((fRec2[1] == 1.0f)) ? min(1.0f, fTemp14) : ((iTemp31) ? 0.0f : ((iTemp32) ? (fRec17[0] * fTemp29) : fTemp3)));
			float 	fTemp34 = (fTemp28 + -1.0f);
			float 	fTemp35 = ((((fTemp28 > 0.0f)) ? (((fTemp34 >= 1e+01f)) ? (((fTemp34 >= 15.0f)) ? (((fTemp34 >= 18.0f)) ? (((fTemp34 >= 19.0f)) ? 0.0f : 0.01f) : (((fTemp34 >= 17.0f)) ? 0.03f : (((fTemp34 >= 16.0f)) ? 0.06f : 0.08f))) : (((fTemp34 >= 13.0f)) ? (((fTemp34 >= 14.0f)) ? 0.1f : 0.12f) : (((fTemp34 >= 12.0f)) ? 0.14f : (((fTemp34 >= 11.0f)) ? 0.16f : 0.19f)))) : (((fTemp34 >= 5.0f)) ? (((fTemp34 >= 8.0f)) ? (((fTemp34 >= 9.0f)) ? 0.22f : 0.26f) : (((fTemp34 >= 7.0f)) ? 0.3f : (((fTemp34 >= 6.0f)) ? 0.35f : 0.4f))) : (((fTemp34 >= 3.0f)) ? (((fTemp34 >= 4.0f)) ? 0.47f : 0.55f) : (((fTemp34 >= 2.0f)) ? 0.64f : (((fTemp34 >= 1.0f)) ? 0.74f : 0.86f))))) : 1.0f) - fTemp29);
			float 	fTemp36 = (1.0f / ((iTemp31) ? 0.0001f : ((iTemp32) ? (((fTemp35 > 0.0f)) ? (0.05f * (fTemp25 / fTemp35)) : 0.0f) : fTemp25)));
			float 	fTemp37 = (fRec13[1] - fTemp36);
			float 	fTemp38 = (fRec13[1] + fTemp36);
			fRec13[0] = (((fTemp38 < fTemp33)) ? fTemp38 : (((fTemp37 > fTemp33)) ? fTemp37 : fTemp33));
			fRec3[0] = fRec13[0];
			fRec1[0] = (fRec3[0] - (fConst16 * ((fConst14 * fRec1[2]) + (fConst12 * fRec1[1]))));
			float 	fTemp39 = min(0.95f, (fConst24 * (((3947.8418f * fRec1[0]) + (7895.6836f * fRec1[1])) + (3947.8418f * fRec1[2]))));
			float 	fTemp40 = (fSlow11 + (fRec18[1] + -1.0f));
			float 	fTemp41 = (fSlow11 + fRec18[1]);
			int 	iTemp42 = (fTemp40 < 0.0f);
			fRec18[0] = ((iTemp42) ? fTemp41 : fTemp40);
			float 	fRec19 = ((iTemp42) ? fTemp41 : (fSlow11 + (fRec18[1] + (fSlow12 * fTemp40))));
			int 	iTemp43 = (1 - iVec0[1]);
			float 	fTemp44 = ((iTemp43) ? 0.0f : (fSlow15 + fRec21[1]));
			fRec21[0] = (fTemp44 - floorf(fTemp44));
			float 	fTemp45 = powf(((2.0f * fRec21[0]) + -1.0f),2.0f);
			fVec4[0] = fTemp45;
			float 	fTemp46 = float(iVec0[1]);
			float 	fTemp47 = (fSlow16 * (fTemp46 * (fVec4[0] - fVec4[1])));
			fVec5[IOTA&4095] = fTemp47;
			fRec20[0] = (((0.999f * fRec20[1]) + fVec5[IOTA&4095]) - ((fSlow22 * fVec5[(IOTA-iSlow18)&4095]) + (fSlow21 * fVec5[(IOTA-iSlow19)&4095])));
			fVec6[0] = fSlow25;
			int 	iTemp48 = (fSlow25 != fVec6[1]);
			iVec7[0] = iTemp48;
			int 	iTemp49 = ((iVec7[1] <= 0) & (iVec7[0] > 0));
			iRec25[0] = ((iRec25[1] * (1 - iTemp49)) + (iTemp2 * iTemp49));
			float 	fTemp50 = (((((fConst17 * float((iRec5[0] + (-1 - iRec25[0])))) > 0.1f) & iSlow26)) ? 0.0f : fSlow24);
			int 	iTemp51 = ((fSlow29 >= fRec27[1]) | (float(iRec26[1]) >= fSlow28));
			iRec26[0] = ((iTemp51) ? 0 : (iRec26[1] + 1));
			fRec27[0] = ((iTemp51) ? fSlow29 : fRec27[1]);
			int 	iTemp52 = ((fSlow31 >= fRec29[1]) | (float(iRec28[1]) >= fSlow30));
			iRec28[0] = ((iTemp52) ? 0 : (iRec28[1] + 1));
			fRec29[0] = ((iTemp52) ? fSlow31 : fRec29[1]);
			float 	fTemp53 = (((fRec29[0] > fRec27[0])) ? fRec29[0] : (-1.0f * fRec27[0]));
			float 	fTemp54 = fabsf(fTemp53);
			float 	fTemp55 = (1.0f - fTemp54);
			int 	iTemp56 = ((fTemp53 > 0.0f) + (1 - (fTemp53 < 0.0f)));
			int 	iTemp57 = (iTemp56 == 1);
			int 	iTemp58 = (iTemp56 == 0);
			fRec30[0] = fRec23[1];
			float 	fTemp59 = (fRec32[1] - fConst18);
			float 	fTemp60 = (fConst18 + fRec32[1]);
			fRec32[0] = (((fTemp60 < fSlow25)) ? fTemp60 : (((fTemp59 > fSlow25)) ? fTemp59 : fSlow25));
			fRec31[0] = (((fRec30[1] != fRec23[1])) ? fRec32[0] : max(fRec31[1], fRec32[0]));
			float 	fTemp61 = (fRec31[0] * ((((iTemp58) ? 2.0f : ((iTemp57) ? 1.3f : 0.5f)) * fTemp54) + (1.3f * fTemp55)));
			int 	iTemp62 = (fTemp50 <= 0.01f);
			int 	iTemp63 = (fTemp50 >= fRec24[1]);
			fbargraph1 = float((((fRec23[1] >= 3.0f)) ? (((fRec23[1] >= 5.0f)) ? ((iTemp62) ? 3 : ((iTemp63) ? 4 : 5)) : (((fRec23[1] >= 4.0f)) ? ((iTemp62) ? 3 : (((fTemp50 <= fRec24[1])) ? 5 : 4)) : (((iTemp62 & (fRec24[1] <= 0.001f))) ? 0 : (((fTemp50 > fRec24[1])) ? 1 : 3)))) : (((fRec23[1] >= 2.0f)) ? ((iTemp63) ? 4 : ((iTemp62) ? 3 : 2)) : (((fRec23[1] >= 1.0f)) ? (((fRec24[1] >= fTemp61)) ? 2 : 1) : (((fTemp50 > 0.0f)) ? 1 : 0)))));
			float 	fTemp64 = fbargraph1;
			fRec23[0] = fTemp64;
			int 	iTemp65 = (fTemp64 >= 1.0f);
			float 	fTemp66 = ((iTemp65) ? fConst19 : 0.0f);
			int 	iTemp67 = (fTemp64 >= 2.0f);
			int 	iTemp68 = (fTemp64 >= 4.0f);
			int 	iTemp69 = (fTemp64 >= 5.0f);
			int 	iTemp70 = (fTemp64 >= 3.0f);
			float 	fTemp71 = ((iTemp70) ? ((iTemp69) ? fConst22 : ((iTemp68) ? fConst22 : fConst21)) : ((iTemp67) ? fConst20 : fTemp66));
			float 	fTemp72 = ((fTemp54 * ((iTemp58) ? ((iTemp70) ? ((iTemp69) ? fConst21 : ((iTemp68) ? fConst21 : fConst23)) : ((iTemp67) ? fConst19 : ((iTemp65) ? fConst20 : 0.0f))) : ((iTemp57) ? fTemp71 : ((iTemp70) ? fConst19 : ((iTemp67) ? fConst19 : fTemp66))))) + (fTemp55 * fTemp71));
			int 	iTemp73 = (fRec23[1] != fRec23[2]);
			iVec8[0] = iTemp73;
			int 	iTemp74 = ((iVec8[1] <= 0) & (iVec8[0] > 0));
			iRec34[0] = ((iRec34[1] * (1 - iTemp74)) + (iTemp2 * iTemp74));
			float 	fTemp75 = floorf((2e+01f * (((fTemp72 > 0.0f)) ? (float((iRec5[0] + (-1 - iRec34[0]))) / fTemp72) : 0.0f)));
			float 	fTemp76 = (((fTemp75 >= 1e+01f)) ? (((fTemp75 >= 15.0f)) ? (((fTemp75 >= 18.0f)) ? (((fTemp75 >= 19.0f)) ? 0.0f : 0.01f) : (((fTemp75 >= 17.0f)) ? 0.03f : (((fTemp75 >= 16.0f)) ? 0.06f : 0.08f))) : (((fTemp75 >= 13.0f)) ? (((fTemp75 >= 14.0f)) ? 0.1f : 0.12f) : (((fTemp75 >= 12.0f)) ? 0.14f : (((fTemp75 >= 11.0f)) ? 0.16f : 0.19f)))) : (((fTemp75 >= 5.0f)) ? (((fTemp75 >= 8.0f)) ? (((fTemp75 >= 9.0f)) ? 0.22f : 0.26f) : (((fTemp75 >= 7.0f)) ? 0.3f : (((fTemp75 >= 6.0f)) ? 0.35f : 0.4f))) : (((fTemp75 >= 3.0f)) ? (((fTemp75 >= 4.0f)) ? 0.47f : 0.55f) : (((fTemp75 >= 2.0f)) ? 0.64f : (((fTemp75 >= 1.0f)) ? 0.74f : 0.86f)))));
			fRec35[0] = fRec23[1];
			int 	iTemp77 = (fRec35[1] == fRec23[1]);
			int 	iTemp78 = (fRec23[1] == 0.0f);
			fRec36[0] = ((iTemp78) ? fTemp50 : ((iTemp77) ? min(min(fRec36[1], fTemp50), fRec24[1]) : min(fTemp50, fRec24[1])));
			fRec37[0] = ((iTemp78) ? fTemp50 : ((iTemp77) ? max(max(fRec37[1], fTemp50), fRec24[1]) : max(fTemp50, fRec24[1])));
			int 	iTemp79 = (fRec23[1] == 3.0f);
			float 	fTemp80 = (((fRec23[1] == 1.0f)) ? min(1.0f, fTemp61) : ((iTemp78) ? 0.0f : ((iTemp79) ? (fRec37[0] * fTemp76) : fTemp50)));
			float 	fTemp81 = (fTemp75 + -1.0f);
			float 	fTemp82 = ((((fTemp75 > 0.0f)) ? (((fTemp81 >= 1e+01f)) ? (((fTemp81 >= 15.0f)) ? (((fTemp81 >= 18.0f)) ? (((fTemp81 >= 19.0f)) ? 0.0f : 0.01f) : (((fTemp81 >= 17.0f)) ? 0.03f : (((fTemp81 >= 16.0f)) ? 0.06f : 0.08f))) : (((fTemp81 >= 13.0f)) ? (((fTemp81 >= 14.0f)) ? 0.1f : 0.12f) : (((fTemp81 >= 12.0f)) ? 0.14f : (((fTemp81 >= 11.0f)) ? 0.16f : 0.19f)))) : (((fTemp81 >= 5.0f)) ? (((fTemp81 >= 8.0f)) ? (((fTemp81 >= 9.0f)) ? 0.22f : 0.26f) : (((fTemp81 >= 7.0f)) ? 0.3f : (((fTemp81 >= 6.0f)) ? 0.35f : 0.4f))) : (((fTemp81 >= 3.0f)) ? (((fTemp81 >= 4.0f)) ? 0.47f : 0.55f) : (((fTemp81 >= 2.0f)) ? 0.64f : (((fTemp81 >= 1.0f)) ? 0.74f : 0.86f))))) : 1.0f) - fTemp76);
			float 	fTemp83 = (1.0f / ((iTemp78) ? 0.0001f : ((iTemp79) ? (((fTemp82 > 0.0f)) ? (0.05f * (fTemp72 / fTemp82)) : 0.0f) : fTemp72)));
			float 	fTemp84 = (fRec33[1] - fTemp83);
			float 	fTemp85 = (fRec33[1] + fTemp83);
			fRec33[0] = (((fTemp85 < fTemp80)) ? fTemp85 : (((fTemp84 > fTemp80)) ? fTemp84 : fTemp80));
			fRec24[0] = fRec33[0];
			fRec22[0] = (fRec24[0] - (fConst16 * ((fConst14 * fRec22[2]) + (fConst12 * fRec22[1]))));
			float 	fTemp86 = min(0.95f, (fConst24 * (((3947.8418f * fRec22[0]) + (7895.6836f * fRec22[1])) + (3947.8418f * fRec22[2]))));
			float 	fTemp87 = (fSlow35 + (fRec38[1] + -1.0f));
			float 	fTemp88 = (fSlow35 + fRec38[1]);
			int 	iTemp89 = (fTemp87 < 0.0f);
			fRec38[0] = ((iTemp89) ? fTemp88 : fTemp87);
			float 	fRec39 = ((iTemp89) ? fTemp88 : (fSlow35 + (fRec38[1] + (fSlow36 * fTemp87))));
			float 	fTemp90 = ((iTemp43) ? 0.0f : (fSlow39 + fRec41[1]));
			fRec41[0] = (fTemp90 - floorf(fTemp90));
			float 	fTemp91 = powf(((2.0f * fRec41[0]) + -1.0f),2.0f);
			fVec9[0] = fTemp91;
			float 	fTemp92 = (fSlow40 * (fTemp46 * (fVec9[0] - fVec9[1])));
			fVec10[IOTA&4095] = fTemp92;
			fRec40[0] = (((0.999f * fRec40[1]) + fVec10[IOTA&4095]) - ((fSlow46 * fVec10[(IOTA-iSlow42)&4095]) + (fSlow45 * fVec10[(IOTA-iSlow43)&4095])));
			fVec11[0] = fSlow49;
			int 	iTemp93 = (fSlow49 != fVec11[1]);
			iVec12[0] = iTemp93;
			int 	iTemp94 = ((iVec12[1] <= 0) & (iVec12[0] > 0));
			iRec45[0] = ((iRec45[1] * (1 - iTemp94)) + (iTemp2 * iTemp94));
			float 	fTemp95 = (((((fConst17 * float((iRec5[0] + (-1 - iRec45[0])))) > 0.1f) & iSlow50)) ? 0.0f : fSlow48);
			int 	iTemp96 = ((fSlow53 >= fRec47[1]) | (float(iRec46[1]) >= fSlow52));
			iRec46[0] = ((iTemp96) ? 0 : (iRec46[1] + 1));
			fRec47[0] = ((iTemp96) ? fSlow53 : fRec47[1]);
			int 	iTemp97 = ((fSlow55 >= fRec49[1]) | (float(iRec48[1]) >= fSlow54));
			iRec48[0] = ((iTemp97) ? 0 : (iRec48[1] + 1));
			fRec49[0] = ((iTemp97) ? fSlow55 : fRec49[1]);
			float 	fTemp98 = (((fRec49[0] > fRec47[0])) ? fRec49[0] : (-1.0f * fRec47[0]));
			float 	fTemp99 = fabsf(fTemp98);
			float 	fTemp100 = (1.0f - fTemp99);
			int 	iTemp101 = ((fTemp98 > 0.0f) + (1 - (fTemp98 < 0.0f)));
			int 	iTemp102 = (iTemp101 == 1);
			int 	iTemp103 = (iTemp101 == 0);
			fRec50[0] = fRec43[1];
			float 	fTemp104 = (fRec52[1] - fConst18);
			float 	fTemp105 = (fConst18 + fRec52[1]);
			fRec52[0] = (((fTemp105 < fSlow49)) ? fTemp105 : (((fTemp104 > fSlow49)) ? fTemp104 : fSlow49));
			fRec51[0] = (((fRec50[1] != fRec43[1])) ? fRec52[0] : max(fRec51[1], fRec52[0]));
			float 	fTemp106 = (fRec51[0] * ((((iTemp103) ? 2.0f : ((iTemp102) ? 1.3f : 0.5f)) * fTemp99) + (1.3f * fTemp100)));
			int 	iTemp107 = (fTemp95 <= 0.01f);
			int 	iTemp108 = (fTemp95 >= fRec44[1]);
			fbargraph2 = float((((fRec43[1] >= 3.0f)) ? (((fRec43[1] >= 5.0f)) ? ((iTemp107) ? 3 : ((iTemp108) ? 4 : 5)) : (((fRec43[1] >= 4.0f)) ? ((iTemp107) ? 3 : (((fTemp95 <= fRec44[1])) ? 5 : 4)) : (((iTemp107 & (fRec44[1] <= 0.001f))) ? 0 : (((fTemp95 > fRec44[1])) ? 1 : 3)))) : (((fRec43[1] >= 2.0f)) ? ((iTemp108) ? 4 : ((iTemp107) ? 3 : 2)) : (((fRec43[1] >= 1.0f)) ? (((fRec44[1] >= fTemp106)) ? 2 : 1) : (((fTemp95 > 0.0f)) ? 1 : 0)))));
			float 	fTemp109 = fbargraph2;
			fRec43[0] = fTemp109;
			int 	iTemp110 = (fTemp109 >= 1.0f);
			float 	fTemp111 = ((iTemp110) ? fConst19 : 0.0f);
			int 	iTemp112 = (fTemp109 >= 2.0f);
			int 	iTemp113 = (fTemp109 >= 4.0f);
			int 	iTemp114 = (fTemp109 >= 5.0f);
			int 	iTemp115 = (fTemp109 >= 3.0f);
			float 	fTemp116 = ((iTemp115) ? ((iTemp114) ? fConst22 : ((iTemp113) ? fConst22 : fConst21)) : ((iTemp112) ? fConst20 : fTemp111));
			float 	fTemp117 = ((fTemp99 * ((iTemp103) ? ((iTemp115) ? ((iTemp114) ? fConst21 : ((iTemp113) ? fConst21 : fConst23)) : ((iTemp112) ? fConst19 : ((iTemp110) ? fConst20 : 0.0f))) : ((iTemp102) ? fTemp116 : ((iTemp115) ? fConst19 : ((iTemp112) ? fConst19 : fTemp111))))) + (fTemp100 * fTemp116));
			int 	iTemp118 = (fRec43[1] != fRec43[2]);
			iVec13[0] = iTemp118;
			int 	iTemp119 = ((iVec13[1] <= 0) & (iVec13[0] > 0));
			iRec54[0] = ((iRec54[1] * (1 - iTemp119)) + (iTemp2 * iTemp119));
			float 	fTemp120 = floorf((2e+01f * (((fTemp117 > 0.0f)) ? (float((iRec5[0] + (-1 - iRec54[0]))) / fTemp117) : 0.0f)));
			float 	fTemp121 = (((fTemp120 >= 1e+01f)) ? (((fTemp120 >= 15.0f)) ? (((fTemp120 >= 18.0f)) ? (((fTemp120 >= 19.0f)) ? 0.0f : 0.01f) : (((fTemp120 >= 17.0f)) ? 0.03f : (((fTemp120 >= 16.0f)) ? 0.06f : 0.08f))) : (((fTemp120 >= 13.0f)) ? (((fTemp120 >= 14.0f)) ? 0.1f : 0.12f) : (((fTemp120 >= 12.0f)) ? 0.14f : (((fTemp120 >= 11.0f)) ? 0.16f : 0.19f)))) : (((fTemp120 >= 5.0f)) ? (((fTemp120 >= 8.0f)) ? (((fTemp120 >= 9.0f)) ? 0.22f : 0.26f) : (((fTemp120 >= 7.0f)) ? 0.3f : (((fTemp120 >= 6.0f)) ? 0.35f : 0.4f))) : (((fTemp120 >= 3.0f)) ? (((fTemp120 >= 4.0f)) ? 0.47f : 0.55f) : (((fTemp120 >= 2.0f)) ? 0.64f : (((fTemp120 >= 1.0f)) ? 0.74f : 0.86f)))));
			fRec55[0] = fRec43[1];
			int 	iTemp122 = (fRec55[1] == fRec43[1]);
			int 	iTemp123 = (fRec43[1] == 0.0f);
			fRec56[0] = ((iTemp123) ? fTemp95 : ((iTemp122) ? min(min(fRec56[1], fTemp95), fRec44[1]) : min(fTemp95, fRec44[1])));
			fRec57[0] = ((iTemp123) ? fTemp95 : ((iTemp122) ? max(max(fRec57[1], fTemp95), fRec44[1]) : max(fTemp95, fRec44[1])));
			int 	iTemp124 = (fRec43[1] == 3.0f);
			float 	fTemp125 = (((fRec43[1] == 1.0f)) ? min(1.0f, fTemp106) : ((iTemp123) ? 0.0f : ((iTemp124) ? (fRec57[0] * fTemp121) : fTemp95)));
			float 	fTemp126 = (fTemp120 + -1.0f);
			float 	fTemp127 = ((((fTemp120 > 0.0f)) ? (((fTemp126 >= 1e+01f)) ? (((fTemp126 >= 15.0f)) ? (((fTemp126 >= 18.0f)) ? (((fTemp126 >= 19.0f)) ? 0.0f : 0.01f) : (((fTemp126 >= 17.0f)) ? 0.03f : (((fTemp126 >= 16.0f)) ? 0.06f : 0.08f))) : (((fTemp126 >= 13.0f)) ? (((fTemp126 >= 14.0f)) ? 0.1f : 0.12f) : (((fTemp126 >= 12.0f)) ? 0.14f : (((fTemp126 >= 11.0f)) ? 0.16f : 0.19f)))) : (((fTemp126 >= 5.0f)) ? (((fTemp126 >= 8.0f)) ? (((fTemp126 >= 9.0f)) ? 0.22f : 0.26f) : (((fTemp126 >= 7.0f)) ? 0.3f : (((fTemp126 >= 6.0f)) ? 0.35f : 0.4f))) : (((fTemp126 >= 3.0f)) ? (((fTemp126 >= 4.0f)) ? 0.47f : 0.55f) : (((fTemp126 >= 2.0f)) ? 0.64f : (((fTemp126 >= 1.0f)) ? 0.74f : 0.86f))))) : 1.0f) - fTemp121);
			float 	fTemp128 = (1.0f / ((iTemp123) ? 0.0001f : ((iTemp124) ? (((fTemp127 > 0.0f)) ? (0.05f * (fTemp117 / fTemp127)) : 0.0f) : fTemp117)));
			float 	fTemp129 = (fRec53[1] - fTemp128);
			float 	fTemp130 = (fRec53[1] + fTemp128);
			fRec53[0] = (((fTemp130 < fTemp125)) ? fTemp130 : (((fTemp129 > fTemp125)) ? fTemp129 : fTemp125));
			fRec44[0] = fRec53[0];
			fRec42[0] = (fRec44[0] - (fConst16 * ((fConst14 * fRec42[2]) + (fConst12 * fRec42[1]))));
			float 	fTemp131 = min(0.95f, (fConst24 * (((3947.8418f * fRec42[0]) + (7895.6836f * fRec42[1])) + (3947.8418f * fRec42[2]))));
			float 	fTemp132 = (fSlow59 + (fRec58[1] + -1.0f));
			float 	fTemp133 = (fSlow59 + fRec58[1]);
			int 	iTemp134 = (fTemp132 < 0.0f);
			fRec58[0] = ((iTemp134) ? fTemp133 : fTemp132);
			float 	fRec59 = ((iTemp134) ? fTemp133 : (fSlow59 + (fRec58[1] + (fSlow60 * fTemp132))));
			float 	fTemp135 = ((iTemp43) ? 0.0f : (fSlow63 + fRec61[1]));
			fRec61[0] = (fTemp135 - floorf(fTemp135));
			float 	fTemp136 = powf(((2.0f * fRec61[0]) + -1.0f),2.0f);
			fVec14[0] = fTemp136;
			float 	fTemp137 = (fSlow64 * (fTemp46 * (fVec14[0] - fVec14[1])));
			fVec15[IOTA&4095] = fTemp137;
			fRec60[0] = (((0.999f * fRec60[1]) + fVec15[IOTA&4095]) - ((fSlow70 * fVec15[(IOTA-iSlow66)&4095]) + (fSlow69 * fVec15[(IOTA-iSlow67)&4095])));
			fVec16[0] = fSlow73;
			int 	iTemp138 = (fSlow73 != fVec16[1]);
			iVec17[0] = iTemp138;
			int 	iTemp139 = ((iVec17[1] <= 0) & (iVec17[0] > 0));
			iRec65[0] = ((iRec65[1] * (1 - iTemp139)) + (iTemp2 * iTemp139));
			float 	fTemp140 = (((((fConst17 * float((iRec5[0] + (-1 - iRec65[0])))) > 0.1f) & iSlow74)) ? 0.0f : fSlow72);
			int 	iTemp141 = ((fSlow77 >= fRec67[1]) | (float(iRec66[1]) >= fSlow76));
			iRec66[0] = ((iTemp141) ? 0 : (iRec66[1] + 1));
			fRec67[0] = ((iTemp141) ? fSlow77 : fRec67[1]);
			int 	iTemp142 = ((fSlow79 >= fRec69[1]) | (float(iRec68[1]) >= fSlow78));
			iRec68[0] = ((iTemp142) ? 0 : (iRec68[1] + 1));
			fRec69[0] = ((iTemp142) ? fSlow79 : fRec69[1]);
			float 	fTemp143 = (((fRec69[0] > fRec67[0])) ? fRec69[0] : (-1.0f * fRec67[0]));
			float 	fTemp144 = fabsf(fTemp143);
			float 	fTemp145 = (1.0f - fTemp144);
			int 	iTemp146 = ((fTemp143 > 0.0f) + (1 - (fTemp143 < 0.0f)));
			int 	iTemp147 = (iTemp146 == 1);
			int 	iTemp148 = (iTemp146 == 0);
			fRec70[0] = fRec63[1];
			float 	fTemp149 = (fRec72[1] - fConst18);
			float 	fTemp150 = (fConst18 + fRec72[1]);
			fRec72[0] = (((fTemp150 < fSlow73)) ? fTemp150 : (((fTemp149 > fSlow73)) ? fTemp149 : fSlow73));
			fRec71[0] = (((fRec70[1] != fRec63[1])) ? fRec72[0] : max(fRec71[1], fRec72[0]));
			float 	fTemp151 = (fRec71[0] * ((((iTemp148) ? 2.0f : ((iTemp147) ? 1.3f : 0.5f)) * fTemp144) + (1.3f * fTemp145)));
			int 	iTemp152 = (fTemp140 <= 0.01f);
			int 	iTemp153 = (fTemp140 >= fRec64[1]);
			fbargraph3 = float((((fRec63[1] >= 3.0f)) ? (((fRec63[1] >= 5.0f)) ? ((iTemp152) ? 3 : ((iTemp153) ? 4 : 5)) : (((fRec63[1] >= 4.0f)) ? ((iTemp152) ? 3 : (((fTemp140 <= fRec64[1])) ? 5 : 4)) : (((iTemp152 & (fRec64[1] <= 0.001f))) ? 0 : (((fTemp140 > fRec64[1])) ? 1 : 3)))) : (((fRec63[1] >= 2.0f)) ? ((iTemp153) ? 4 : ((iTemp152) ? 3 : 2)) : (((fRec63[1] >= 1.0f)) ? (((fRec64[1] >= fTemp151)) ? 2 : 1) : (((fTemp140 > 0.0f)) ? 1 : 0)))));
			float 	fTemp154 = fbargraph3;
			fRec63[0] = fTemp154;
			int 	iTemp155 = (fTemp154 >= 1.0f);
			float 	fTemp156 = ((iTemp155) ? fConst19 : 0.0f);
			int 	iTemp157 = (fTemp154 >= 2.0f);
			int 	iTemp158 = (fTemp154 >= 4.0f);
			int 	iTemp159 = (fTemp154 >= 5.0f);
			int 	iTemp160 = (fTemp154 >= 3.0f);
			float 	fTemp161 = ((iTemp160) ? ((iTemp159) ? fConst22 : ((iTemp158) ? fConst22 : fConst21)) : ((iTemp157) ? fConst20 : fTemp156));
			float 	fTemp162 = ((fTemp144 * ((iTemp148) ? ((iTemp160) ? ((iTemp159) ? fConst21 : ((iTemp158) ? fConst21 : fConst23)) : ((iTemp157) ? fConst19 : ((iTemp155) ? fConst20 : 0.0f))) : ((iTemp147) ? fTemp161 : ((iTemp160) ? fConst19 : ((iTemp157) ? fConst19 : fTemp156))))) + (fTemp145 * fTemp161));
			int 	iTemp163 = (fRec63[1] != fRec63[2]);
			iVec18[0] = iTemp163;
			int 	iTemp164 = ((iVec18[1] <= 0) & (iVec18[0] > 0));
			iRec74[0] = ((iRec74[1] * (1 - iTemp164)) + (iTemp2 * iTemp164));
			float 	fTemp165 = floorf((2e+01f * (((fTemp162 > 0.0f)) ? (float((iRec5[0] + (-1 - iRec74[0]))) / fTemp162) : 0.0f)));
			float 	fTemp166 = (((fTemp165 >= 1e+01f)) ? (((fTemp165 >= 15.0f)) ? (((fTemp165 >= 18.0f)) ? (((fTemp165 >= 19.0f)) ? 0.0f : 0.01f) : (((fTemp165 >= 17.0f)) ? 0.03f : (((fTemp165 >= 16.0f)) ? 0.06f : 0.08f))) : (((fTemp165 >= 13.0f)) ? (((fTemp165 >= 14.0f)) ? 0.1f : 0.12f) : (((fTemp165 >= 12.0f)) ? 0.14f : (((fTemp165 >= 11.0f)) ? 0.16f : 0.19f)))) : (((fTemp165 >= 5.0f)) ? (((fTemp165 >= 8.0f)) ? (((fTemp165 >= 9.0f)) ? 0.22f : 0.26f) : (((fTemp165 >= 7.0f)) ? 0.3f : (((fTemp165 >= 6.0f)) ? 0.35f : 0.4f))) : (((fTemp165 >= 3.0f)) ? (((fTemp165 >= 4.0f)) ? 0.47f : 0.55f) : (((fTemp165 >= 2.0f)) ? 0.64f : (((fTemp165 >= 1.0f)) ? 0.74f : 0.86f)))));
			fRec75[0] = fRec63[1];
			int 	iTemp167 = (fRec75[1] == fRec63[1]);
			int 	iTemp168 = (fRec63[1] == 0.0f);
			fRec76[0] = ((iTemp168) ? fTemp140 : ((iTemp167) ? min(min(fRec76[1], fTemp140), fRec64[1]) : min(fTemp140, fRec64[1])));
			fRec77[0] = ((iTemp168) ? fTemp140 : ((iTemp167) ? max(max(fRec77[1], fTemp140), fRec64[1]) : max(fTemp140, fRec64[1])));
			int 	iTemp169 = (fRec63[1] == 3.0f);
			float 	fTemp170 = (((fRec63[1] == 1.0f)) ? min(1.0f, fTemp151) : ((iTemp168) ? 0.0f : ((iTemp169) ? (fRec77[0] * fTemp166) : fTemp140)));
			float 	fTemp171 = (fTemp165 + -1.0f);
			float 	fTemp172 = ((((fTemp165 > 0.0f)) ? (((fTemp171 >= 1e+01f)) ? (((fTemp171 >= 15.0f)) ? (((fTemp171 >= 18.0f)) ? (((fTemp171 >= 19.0f)) ? 0.0f : 0.01f) : (((fTemp171 >= 17.0f)) ? 0.03f : (((fTemp171 >= 16.0f)) ? 0.06f : 0.08f))) : (((fTemp171 >= 13.0f)) ? (((fTemp171 >= 14.0f)) ? 0.1f : 0.12f) : (((fTemp171 >= 12.0f)) ? 0.14f : (((fTemp171 >= 11.0f)) ? 0.16f : 0.19f)))) : (((fTemp171 >= 5.0f)) ? (((fTemp171 >= 8.0f)) ? (((fTemp171 >= 9.0f)) ? 0.22f : 0.26f) : (((fTemp171 >= 7.0f)) ? 0.3f : (((fTemp171 >= 6.0f)) ? 0.35f : 0.4f))) : (((fTemp171 >= 3.0f)) ? (((fTemp171 >= 4.0f)) ? 0.47f : 0.55f) : (((fTemp171 >= 2.0f)) ? 0.64f : (((fTemp171 >= 1.0f)) ? 0.74f : 0.86f))))) : 1.0f) - fTemp166);
			float 	fTemp173 = (1.0f / ((iTemp168) ? 0.0001f : ((iTemp169) ? (((fTemp172 > 0.0f)) ? (0.05f * (fTemp162 / fTemp172)) : 0.0f) : fTemp162)));
			float 	fTemp174 = (fRec73[1] - fTemp173);
			float 	fTemp175 = (fRec73[1] + fTemp173);
			fRec73[0] = (((fTemp175 < fTemp170)) ? fTemp175 : (((fTemp174 > fTemp170)) ? fTemp174 : fTemp170));
			fRec64[0] = fRec73[0];
			fRec62[0] = (fRec64[0] - (fConst16 * ((fConst14 * fRec62[2]) + (fConst12 * fRec62[1]))));
			float 	fTemp176 = min(0.95f, (fConst24 * (((3947.8418f * fRec62[0]) + (7895.6836f * fRec62[1])) + (3947.8418f * fRec62[2]))));
			float 	fTemp177 = (fSlow83 + (fRec78[1] + -1.0f));
			float 	fTemp178 = (fSlow83 + fRec78[1]);
			int 	iTemp179 = (fTemp177 < 0.0f);
			fRec78[0] = ((iTemp179) ? fTemp178 : fTemp177);
			float 	fRec79 = ((iTemp179) ? fTemp178 : (fSlow83 + (fRec78[1] + (fSlow84 * fTemp177))));
			float 	fTemp180 = ((iTemp43) ? 0.0f : (fSlow87 + fRec81[1]));
			fRec81[0] = (fTemp180 - floorf(fTemp180));
			float 	fTemp181 = powf(((2.0f * fRec81[0]) + -1.0f),2.0f);
			fVec19[0] = fTemp181;
			float 	fTemp182 = (fSlow88 * (fTemp46 * (fVec19[0] - fVec19[1])));
			fVec20[IOTA&4095] = fTemp182;
			fRec80[0] = (((0.999f * fRec80[1]) + fVec20[IOTA&4095]) - ((fSlow94 * fVec20[(IOTA-iSlow90)&4095]) + (fSlow93 * fVec20[(IOTA-iSlow91)&4095])));
			fVec21[0] = fSlow97;
			int 	iTemp183 = (fSlow97 != fVec21[1]);
			iVec22[0] = iTemp183;
			int 	iTemp184 = ((iVec22[1] <= 0) & (iVec22[0] > 0));
			iRec85[0] = ((iRec85[1] * (1 - iTemp184)) + (iTemp2 * iTemp184));
			float 	fTemp185 = (((((fConst17 * float((iRec5[0] + (-1 - iRec85[0])))) > 0.1f) & iSlow98)) ? 0.0f : fSlow96);
			int 	iTemp186 = ((fSlow101 >= fRec87[1]) | (float(iRec86[1]) >= fSlow100));
			iRec86[0] = ((iTemp186) ? 0 : (iRec86[1] + 1));
			fRec87[0] = ((iTemp186) ? fSlow101 : fRec87[1]);
			int 	iTemp187 = ((fSlow103 >= fRec89[1]) | (float(iRec88[1]) >= fSlow102));
			iRec88[0] = ((iTemp187) ? 0 : (iRec88[1] + 1));
			fRec89[0] = ((iTemp187) ? fSlow103 : fRec89[1]);
			float 	fTemp188 = (((fRec89[0] > fRec87[0])) ? fRec89[0] : (-1.0f * fRec87[0]));
			float 	fTemp189 = fabsf(fTemp188);
			float 	fTemp190 = (1.0f - fTemp189);
			int 	iTemp191 = ((fTemp188 > 0.0f) + (1 - (fTemp188 < 0.0f)));
			int 	iTemp192 = (iTemp191 == 1);
			int 	iTemp193 = (iTemp191 == 0);
			fRec90[0] = fRec83[1];
			float 	fTemp194 = (fRec92[1] - fConst18);
			float 	fTemp195 = (fConst18 + fRec92[1]);
			fRec92[0] = (((fTemp195 < fSlow97)) ? fTemp195 : (((fTemp194 > fSlow97)) ? fTemp194 : fSlow97));
			fRec91[0] = (((fRec90[1] != fRec83[1])) ? fRec92[0] : max(fRec91[1], fRec92[0]));
			float 	fTemp196 = (fRec91[0] * ((((iTemp193) ? 2.0f : ((iTemp192) ? 1.3f : 0.5f)) * fTemp189) + (1.3f * fTemp190)));
			int 	iTemp197 = (fTemp185 <= 0.01f);
			int 	iTemp198 = (fTemp185 >= fRec84[1]);
			fbargraph4 = float((((fRec83[1] >= 3.0f)) ? (((fRec83[1] >= 5.0f)) ? ((iTemp197) ? 3 : ((iTemp198) ? 4 : 5)) : (((fRec83[1] >= 4.0f)) ? ((iTemp197) ? 3 : (((fTemp185 <= fRec84[1])) ? 5 : 4)) : (((iTemp197 & (fRec84[1] <= 0.001f))) ? 0 : (((fTemp185 > fRec84[1])) ? 1 : 3)))) : (((fRec83[1] >= 2.0f)) ? ((iTemp198) ? 4 : ((iTemp197) ? 3 : 2)) : (((fRec83[1] >= 1.0f)) ? (((fRec84[1] >= fTemp196)) ? 2 : 1) : (((fTemp185 > 0.0f)) ? 1 : 0)))));
			float 	fTemp199 = fbargraph4;
			fRec83[0] = fTemp199;
			int 	iTemp200 = (fTemp199 >= 1.0f);
			float 	fTemp201 = ((iTemp200) ? fConst19 : 0.0f);
			int 	iTemp202 = (fTemp199 >= 2.0f);
			int 	iTemp203 = (fTemp199 >= 4.0f);
			int 	iTemp204 = (fTemp199 >= 5.0f);
			int 	iTemp205 = (fTemp199 >= 3.0f);
			float 	fTemp206 = ((iTemp205) ? ((iTemp204) ? fConst22 : ((iTemp203) ? fConst22 : fConst21)) : ((iTemp202) ? fConst20 : fTemp201));
			float 	fTemp207 = ((fTemp189 * ((iTemp193) ? ((iTemp205) ? ((iTemp204) ? fConst21 : ((iTemp203) ? fConst21 : fConst23)) : ((iTemp202) ? fConst19 : ((iTemp200) ? fConst20 : 0.0f))) : ((iTemp192) ? fTemp206 : ((iTemp205) ? fConst19 : ((iTemp202) ? fConst19 : fTemp201))))) + (fTemp190 * fTemp206));
			int 	iTemp208 = (fRec83[1] != fRec83[2]);
			iVec23[0] = iTemp208;
			int 	iTemp209 = ((iVec23[1] <= 0) & (iVec23[0] > 0));
			iRec94[0] = ((iRec94[1] * (1 - iTemp209)) + (iTemp2 * iTemp209));
			float 	fTemp210 = floorf((2e+01f * (((fTemp207 > 0.0f)) ? (float((iRec5[0] + (-1 - iRec94[0]))) / fTemp207) : 0.0f)));
			float 	fTemp211 = (((fTemp210 >= 1e+01f)) ? (((fTemp210 >= 15.0f)) ? (((fTemp210 >= 18.0f)) ? (((fTemp210 >= 19.0f)) ? 0.0f : 0.01f) : (((fTemp210 >= 17.0f)) ? 0.03f : (((fTemp210 >= 16.0f)) ? 0.06f : 0.08f))) : (((fTemp210 >= 13.0f)) ? (((fTemp210 >= 14.0f)) ? 0.1f : 0.12f) : (((fTemp210 >= 12.0f)) ? 0.14f : (((fTemp210 >= 11.0f)) ? 0.16f : 0.19f)))) : (((fTemp210 >= 5.0f)) ? (((fTemp210 >= 8.0f)) ? (((fTemp210 >= 9.0f)) ? 0.22f : 0.26f) : (((fTemp210 >= 7.0f)) ? 0.3f : (((fTemp210 >= 6.0f)) ? 0.35f : 0.4f))) : (((fTemp210 >= 3.0f)) ? (((fTemp210 >= 4.0f)) ? 0.47f : 0.55f) : (((fTemp210 >= 2.0f)) ? 0.64f : (((fTemp210 >= 1.0f)) ? 0.74f : 0.86f)))));
			fRec95[0] = fRec83[1];
			int 	iTemp212 = (fRec95[1] == fRec83[1]);
			int 	iTemp213 = (fRec83[1] == 0.0f);
			fRec96[0] = ((iTemp213) ? fTemp185 : ((iTemp212) ? min(min(fRec96[1], fTemp185), fRec84[1]) : min(fTemp185, fRec84[1])));
			fRec97[0] = ((iTemp213) ? fTemp185 : ((iTemp212) ? max(max(fRec97[1], fTemp185), fRec84[1]) : max(fTemp185, fRec84[1])));
			int 	iTemp214 = (fRec83[1] == 3.0f);
			float 	fTemp215 = (((fRec83[1] == 1.0f)) ? min(1.0f, fTemp196) : ((iTemp213) ? 0.0f : ((iTemp214) ? (fRec97[0] * fTemp211) : fTemp185)));
			float 	fTemp216 = (fTemp210 + -1.0f);
			float 	fTemp217 = ((((fTemp210 > 0.0f)) ? (((fTemp216 >= 1e+01f)) ? (((fTemp216 >= 15.0f)) ? (((fTemp216 >= 18.0f)) ? (((fTemp216 >= 19.0f)) ? 0.0f : 0.01f) : (((fTemp216 >= 17.0f)) ? 0.03f : (((fTemp216 >= 16.0f)) ? 0.06f : 0.08f))) : (((fTemp216 >= 13.0f)) ? (((fTemp216 >= 14.0f)) ? 0.1f : 0.12f) : (((fTemp216 >= 12.0f)) ? 0.14f : (((fTemp216 >= 11.0f)) ? 0.16f : 0.19f)))) : (((fTemp216 >= 5.0f)) ? (((fTemp216 >= 8.0f)) ? (((fTemp216 >= 9.0f)) ? 0.22f : 0.26f) : (((fTemp216 >= 7.0f)) ? 0.3f : (((fTemp216 >= 6.0f)) ? 0.35f : 0.4f))) : (((fTemp216 >= 3.0f)) ? (((fTemp216 >= 4.0f)) ? 0.47f : 0.55f) : (((fTemp216 >= 2.0f)) ? 0.64f : (((fTemp216 >= 1.0f)) ? 0.74f : 0.86f))))) : 1.0f) - fTemp211);
			float 	fTemp218 = (1.0f / ((iTemp213) ? 0.0001f : ((iTemp214) ? (((fTemp217 > 0.0f)) ? (0.05f * (fTemp207 / fTemp217)) : 0.0f) : fTemp207)));
			float 	fTemp219 = (fRec93[1] - fTemp218);
			float 	fTemp220 = (fRec93[1] + fTemp218);
			fRec93[0] = (((fTemp220 < fTemp215)) ? fTemp220 : (((fTemp219 > fTemp215)) ? fTemp219 : fTemp215));
			fRec84[0] = fRec93[0];
			fRec82[0] = (fRec84[0] - (fConst16 * ((fConst14 * fRec82[2]) + (fConst12 * fRec82[1]))));
			float 	fTemp221 = min(0.95f, (fConst24 * (((3947.8418f * fRec82[0]) + (7895.6836f * fRec82[1])) + (3947.8418f * fRec82[2]))));
			float 	fTemp222 = (fSlow107 + (fRec98[1] + -1.0f));
			float 	fTemp223 = (fSlow107 + fRec98[1]);
			int 	iTemp224 = (fTemp222 < 0.0f);
			fRec98[0] = ((iTemp224) ? fTemp223 : fTemp222);
			float 	fRec99 = ((iTemp224) ? fTemp223 : (fSlow107 + (fRec98[1] + (fSlow108 * fTemp222))));
			float 	fTemp225 = ((iTemp43) ? 0.0f : (fSlow111 + fRec101[1]));
			fRec101[0] = (fTemp225 - floorf(fTemp225));
			float 	fTemp226 = powf(((2.0f * fRec101[0]) + -1.0f),2.0f);
			fVec24[0] = fTemp226;
			float 	fTemp227 = (fSlow112 * (fTemp46 * (fVec24[0] - fVec24[1])));
			fVec25[IOTA&4095] = fTemp227;
			fRec100[0] = (((0.999f * fRec100[1]) + fVec25[IOTA&4095]) - ((fSlow118 * fVec25[(IOTA-iSlow114)&4095]) + (fSlow117 * fVec25[(IOTA-iSlow115)&4095])));
			fVec26[0] = fSlow121;
			int 	iTemp228 = (fSlow121 != fVec26[1]);
			iVec27[0] = iTemp228;
			int 	iTemp229 = ((iVec27[1] <= 0) & (iVec27[0] > 0));
			iRec105[0] = ((iRec105[1] * (1 - iTemp229)) + (iTemp2 * iTemp229));
			float 	fTemp230 = (((((fConst17 * float((iRec5[0] + (-1 - iRec105[0])))) > 0.1f) & iSlow122)) ? 0.0f : fSlow120);
			int 	iTemp231 = ((fSlow125 >= fRec107[1]) | (float(iRec106[1]) >= fSlow124));
			iRec106[0] = ((iTemp231) ? 0 : (iRec106[1] + 1));
			fRec107[0] = ((iTemp231) ? fSlow125 : fRec107[1]);
			int 	iTemp232 = ((fSlow127 >= fRec109[1]) | (float(iRec108[1]) >= fSlow126));
			iRec108[0] = ((iTemp232) ? 0 : (iRec108[1] + 1));
			fRec109[0] = ((iTemp232) ? fSlow127 : fRec109[1]);
			float 	fTemp233 = (((fRec109[0] > fRec107[0])) ? fRec109[0] : (-1.0f * fRec107[0]));
			float 	fTemp234 = fabsf(fTemp233);
			float 	fTemp235 = (1.0f - fTemp234);
			int 	iTemp236 = ((fTemp233 > 0.0f) + (1 - (fTemp233 < 0.0f)));
			int 	iTemp237 = (iTemp236 == 1);
			int 	iTemp238 = (iTemp236 == 0);
			fRec110[0] = fRec103[1];
			float 	fTemp239 = (fRec112[1] - fConst18);
			float 	fTemp240 = (fConst18 + fRec112[1]);
			fRec112[0] = (((fTemp240 < fSlow121)) ? fTemp240 : (((fTemp239 > fSlow121)) ? fTemp239 : fSlow121));
			fRec111[0] = (((fRec110[1] != fRec103[1])) ? fRec112[0] : max(fRec111[1], fRec112[0]));
			float 	fTemp241 = (fRec111[0] * ((((iTemp238) ? 2.0f : ((iTemp237) ? 1.3f : 0.5f)) * fTemp234) + (1.3f * fTemp235)));
			int 	iTemp242 = (fTemp230 <= 0.01f);
			int 	iTemp243 = (fTemp230 >= fRec104[1]);
			fbargraph5 = float((((fRec103[1] >= 3.0f)) ? (((fRec103[1] >= 5.0f)) ? ((iTemp242) ? 3 : ((iTemp243) ? 4 : 5)) : (((fRec103[1] >= 4.0f)) ? ((iTemp242) ? 3 : (((fTemp230 <= fRec104[1])) ? 5 : 4)) : (((iTemp242 & (fRec104[1] <= 0.001f))) ? 0 : (((fTemp230 > fRec104[1])) ? 1 : 3)))) : (((fRec103[1] >= 2.0f)) ? ((iTemp243) ? 4 : ((iTemp242) ? 3 : 2)) : (((fRec103[1] >= 1.0f)) ? (((fRec104[1] >= fTemp241)) ? 2 : 1) : (((fTemp230 > 0.0f)) ? 1 : 0)))));
			float 	fTemp244 = fbargraph5;
			fRec103[0] = fTemp244;
			int 	iTemp245 = (fTemp244 >= 1.0f);
			float 	fTemp246 = ((iTemp245) ? fConst19 : 0.0f);
			int 	iTemp247 = (fTemp244 >= 2.0f);
			int 	iTemp248 = (fTemp244 >= 4.0f);
			int 	iTemp249 = (fTemp244 >= 5.0f);
			int 	iTemp250 = (fTemp244 >= 3.0f);
			float 	fTemp251 = ((iTemp250) ? ((iTemp249) ? fConst22 : ((iTemp248) ? fConst22 : fConst21)) : ((iTemp247) ? fConst20 : fTemp246));
			float 	fTemp252 = ((fTemp234 * ((iTemp238) ? ((iTemp250) ? ((iTemp249) ? fConst21 : ((iTemp248) ? fConst21 : fConst23)) : ((iTemp247) ? fConst19 : ((iTemp245) ? fConst20 : 0.0f))) : ((iTemp237) ? fTemp251 : ((iTemp250) ? fConst19 : ((iTemp247) ? fConst19 : fTemp246))))) + (fTemp235 * fTemp251));
			int 	iTemp253 = (fRec103[1] != fRec103[2]);
			iVec28[0] = iTemp253;
			int 	iTemp254 = ((iVec28[1] <= 0) & (iVec28[0] > 0));
			iRec114[0] = ((iRec114[1] * (1 - iTemp254)) + (iTemp2 * iTemp254));
			float 	fTemp255 = floorf((2e+01f * (((fTemp252 > 0.0f)) ? (float((iRec5[0] + (-1 - iRec114[0]))) / fTemp252) : 0.0f)));
			float 	fTemp256 = (((fTemp255 >= 1e+01f)) ? (((fTemp255 >= 15.0f)) ? (((fTemp255 >= 18.0f)) ? (((fTemp255 >= 19.0f)) ? 0.0f : 0.01f) : (((fTemp255 >= 17.0f)) ? 0.03f : (((fTemp255 >= 16.0f)) ? 0.06f : 0.08f))) : (((fTemp255 >= 13.0f)) ? (((fTemp255 >= 14.0f)) ? 0.1f : 0.12f) : (((fTemp255 >= 12.0f)) ? 0.14f : (((fTemp255 >= 11.0f)) ? 0.16f : 0.19f)))) : (((fTemp255 >= 5.0f)) ? (((fTemp255 >= 8.0f)) ? (((fTemp255 >= 9.0f)) ? 0.22f : 0.26f) : (((fTemp255 >= 7.0f)) ? 0.3f : (((fTemp255 >= 6.0f)) ? 0.35f : 0.4f))) : (((fTemp255 >= 3.0f)) ? (((fTemp255 >= 4.0f)) ? 0.47f : 0.55f) : (((fTemp255 >= 2.0f)) ? 0.64f : (((fTemp255 >= 1.0f)) ? 0.74f : 0.86f)))));
			fRec115[0] = fRec103[1];
			int 	iTemp257 = (fRec115[1] == fRec103[1]);
			int 	iTemp258 = (fRec103[1] == 0.0f);
			fRec116[0] = ((iTemp258) ? fTemp230 : ((iTemp257) ? min(min(fRec116[1], fTemp230), fRec104[1]) : min(fTemp230, fRec104[1])));
			fRec117[0] = ((iTemp258) ? fTemp230 : ((iTemp257) ? max(max(fRec117[1], fTemp230), fRec104[1]) : max(fTemp230, fRec104[1])));
			int 	iTemp259 = (fRec103[1] == 3.0f);
			float 	fTemp260 = (((fRec103[1] == 1.0f)) ? min(1.0f, fTemp241) : ((iTemp258) ? 0.0f : ((iTemp259) ? (fRec117[0] * fTemp256) : fTemp230)));
			float 	fTemp261 = (fTemp255 + -1.0f);
			float 	fTemp262 = ((((fTemp255 > 0.0f)) ? (((fTemp261 >= 1e+01f)) ? (((fTemp261 >= 15.0f)) ? (((fTemp261 >= 18.0f)) ? (((fTemp261 >= 19.0f)) ? 0.0f : 0.01f) : (((fTemp261 >= 17.0f)) ? 0.03f : (((fTemp261 >= 16.0f)) ? 0.06f : 0.08f))) : (((fTemp261 >= 13.0f)) ? (((fTemp261 >= 14.0f)) ? 0.1f : 0.12f) : (((fTemp261 >= 12.0f)) ? 0.14f : (((fTemp261 >= 11.0f)) ? 0.16f : 0.19f)))) : (((fTemp261 >= 5.0f)) ? (((fTemp261 >= 8.0f)) ? (((fTemp261 >= 9.0f)) ? 0.22f : 0.26f) : (((fTemp261 >= 7.0f)) ? 0.3f : (((fTemp261 >= 6.0f)) ? 0.35f : 0.4f))) : (((fTemp261 >= 3.0f)) ? (((fTemp261 >= 4.0f)) ? 0.47f : 0.55f) : (((fTemp261 >= 2.0f)) ? 0.64f : (((fTemp261 >= 1.0f)) ? 0.74f : 0.86f))))) : 1.0f) - fTemp256);
			float 	fTemp263 = (1.0f / ((iTemp258) ? 0.0001f : ((iTemp259) ? (((fTemp262 > 0.0f)) ? (0.05f * (fTemp252 / fTemp262)) : 0.0f) : fTemp252)));
			float 	fTemp264 = (fRec113[1] - fTemp263);
			float 	fTemp265 = (fRec113[1] + fTemp263);
			fRec113[0] = (((fTemp265 < fTemp260)) ? fTemp265 : (((fTemp264 > fTemp260)) ? fTemp264 : fTemp260));
			fRec104[0] = fRec113[0];
			fRec102[0] = (fRec104[0] - (fConst16 * ((fConst14 * fRec102[2]) + (fConst12 * fRec102[1]))));
			float 	fTemp266 = min(0.95f, (fConst24 * (((3947.8418f * fRec102[0]) + (7895.6836f * fRec102[1])) + (3947.8418f * fRec102[2]))));
			float 	fTemp267 = (fSlow131 + (fRec118[1] + -1.0f));
			float 	fTemp268 = (fSlow131 + fRec118[1]);
			int 	iTemp269 = (fTemp267 < 0.0f);
			fRec118[0] = ((iTemp269) ? fTemp268 : fTemp267);
			float 	fRec119 = ((iTemp269) ? fTemp268 : (fSlow131 + (fRec118[1] + (fSlow132 * fTemp267))));
			float 	fTemp270 = ((iTemp43) ? 0.0f : (fSlow135 + fRec121[1]));
			fRec121[0] = (fTemp270 - floorf(fTemp270));
			float 	fTemp271 = powf(((2.0f * fRec121[0]) + -1.0f),2.0f);
			fVec29[0] = fTemp271;
			float 	fTemp272 = (fSlow136 * (fTemp46 * (fVec29[0] - fVec29[1])));
			fVec30[IOTA&4095] = fTemp272;
			fRec120[0] = (((0.999f * fRec120[1]) + fVec30[IOTA&4095]) - ((fSlow142 * fVec30[(IOTA-iSlow138)&4095]) + (fSlow141 * fVec30[(IOTA-iSlow139)&4095])));
			fRec0[0] = ((1.37f * ((((((fTemp266 * ((fSlow143 * (fRec120[0] * ((fTemp266 + 1.0f) - fSlow120))) + (((2.0f * fRec119) + -1.0f) * (max(min((3.0f * (fSlow120 - fTemp266)), 0.3f), -0.15f) + 0.25f)))) + (fTemp221 * ((fSlow119 * (fRec100[0] * ((fTemp221 + 1.0f) - fSlow96))) + (((2.0f * fRec99) + -1.0f) * (max(min((3.0f * (fSlow96 - fTemp221)), 0.3f), -0.15f) + 0.25f))))) + (fTemp176 * ((fSlow95 * (fRec80[0] * ((fTemp176 + 1.0f) - fSlow72))) + (((2.0f * fRec79) + -1.0f) * (max(min((3.0f * (fSlow72 - fTemp176)), 0.3f), -0.15f) + 0.25f))))) + (fTemp131 * ((fSlow71 * (fRec60[0] * ((fTemp131 + 1.0f) - fSlow48))) + (((2.0f * fRec59) + -1.0f) * (max(min((3.0f * (fSlow48 - fTemp131)), 0.3f), -0.15f) + 0.25f))))) + (fTemp86 * ((fSlow47 * (fRec40[0] * ((fTemp86 + 1.0f) - fSlow24))) + (((2.0f * fRec39) + -1.0f) * (max(min((3.0f * (fSlow24 - fTemp86)), 0.3f), -0.15f) + 0.25f))))) + (fTemp39 * ((fSlow23 * (fRec20[0] * ((fTemp39 + 1.0f) - fSlow0))) + (((2.0f * fRec19) + -1.0f) * (max(min((3.0f * (fSlow0 - fTemp39)), 0.3f), -0.15f) + 0.25f)))))) - (fConst8 * ((fConst6 * fRec0[2]) + (fConst4 * fRec0[1]))));
			output0[i] = (FAUSTFLOAT)(((fConst28 * fRec0[1]) + (fConst8 * (fRec0[0] + fRec0[2]))));
			// post processing
			IOTA = IOTA+1;
			fRec0[2] = fRec0[1]; fRec0[1] = fRec0[0];
			fRec120[1] = fRec120[0];
			fVec29[1] = fVec29[0];
			fRec121[1] = fRec121[0];
			fRec118[1] = fRec118[0];
			fRec102[2] = fRec102[1]; fRec102[1] = fRec102[0];
			fRec104[1] = fRec104[0];
			fRec113[1] = fRec113[0];
			fRec117[1] = fRec117[0];
			fRec116[1] = fRec116[0];
			fRec115[1] = fRec115[0];
			iRec114[1] = iRec114[0];
			iVec28[1] = iVec28[0];
			fRec103[2] = fRec103[1]; fRec103[1] = fRec103[0];
			fRec111[1] = fRec111[0];
			fRec112[1] = fRec112[0];
			fRec110[1] = fRec110[0];
			fRec109[1] = fRec109[0];
			iRec108[1] = iRec108[0];
			fRec107[1] = fRec107[0];
			iRec106[1] = iRec106[0];
			iRec105[1] = iRec105[0];
			iVec27[1] = iVec27[0];
			fVec26[1] = fVec26[0];
			fRec100[1] = fRec100[0];
			fVec24[1] = fVec24[0];
			fRec101[1] = fRec101[0];
			fRec98[1] = fRec98[0];
			fRec82[2] = fRec82[1]; fRec82[1] = fRec82[0];
			fRec84[1] = fRec84[0];
			fRec93[1] = fRec93[0];
			fRec97[1] = fRec97[0];
			fRec96[1] = fRec96[0];
			fRec95[1] = fRec95[0];
			iRec94[1] = iRec94[0];
			iVec23[1] = iVec23[0];
			fRec83[2] = fRec83[1]; fRec83[1] = fRec83[0];
			fRec91[1] = fRec91[0];
			fRec92[1] = fRec92[0];
			fRec90[1] = fRec90[0];
			fRec89[1] = fRec89[0];
			iRec88[1] = iRec88[0];
			fRec87[1] = fRec87[0];
			iRec86[1] = iRec86[0];
			iRec85[1] = iRec85[0];
			iVec22[1] = iVec22[0];
			fVec21[1] = fVec21[0];
			fRec80[1] = fRec80[0];
			fVec19[1] = fVec19[0];
			fRec81[1] = fRec81[0];
			fRec78[1] = fRec78[0];
			fRec62[2] = fRec62[1]; fRec62[1] = fRec62[0];
			fRec64[1] = fRec64[0];
			fRec73[1] = fRec73[0];
			fRec77[1] = fRec77[0];
			fRec76[1] = fRec76[0];
			fRec75[1] = fRec75[0];
			iRec74[1] = iRec74[0];
			iVec18[1] = iVec18[0];
			fRec63[2] = fRec63[1]; fRec63[1] = fRec63[0];
			fRec71[1] = fRec71[0];
			fRec72[1] = fRec72[0];
			fRec70[1] = fRec70[0];
			fRec69[1] = fRec69[0];
			iRec68[1] = iRec68[0];
			fRec67[1] = fRec67[0];
			iRec66[1] = iRec66[0];
			iRec65[1] = iRec65[0];
			iVec17[1] = iVec17[0];
			fVec16[1] = fVec16[0];
			fRec60[1] = fRec60[0];
			fVec14[1] = fVec14[0];
			fRec61[1] = fRec61[0];
			fRec58[1] = fRec58[0];
			fRec42[2] = fRec42[1]; fRec42[1] = fRec42[0];
			fRec44[1] = fRec44[0];
			fRec53[1] = fRec53[0];
			fRec57[1] = fRec57[0];
			fRec56[1] = fRec56[0];
			fRec55[1] = fRec55[0];
			iRec54[1] = iRec54[0];
			iVec13[1] = iVec13[0];
			fRec43[2] = fRec43[1]; fRec43[1] = fRec43[0];
			fRec51[1] = fRec51[0];
			fRec52[1] = fRec52[0];
			fRec50[1] = fRec50[0];
			fRec49[1] = fRec49[0];
			iRec48[1] = iRec48[0];
			fRec47[1] = fRec47[0];
			iRec46[1] = iRec46[0];
			iRec45[1] = iRec45[0];
			iVec12[1] = iVec12[0];
			fVec11[1] = fVec11[0];
			fRec40[1] = fRec40[0];
			fVec9[1] = fVec9[0];
			fRec41[1] = fRec41[0];
			fRec38[1] = fRec38[0];
			fRec22[2] = fRec22[1]; fRec22[1] = fRec22[0];
			fRec24[1] = fRec24[0];
			fRec33[1] = fRec33[0];
			fRec37[1] = fRec37[0];
			fRec36[1] = fRec36[0];
			fRec35[1] = fRec35[0];
			iRec34[1] = iRec34[0];
			iVec8[1] = iVec8[0];
			fRec23[2] = fRec23[1]; fRec23[1] = fRec23[0];
			fRec31[1] = fRec31[0];
			fRec32[1] = fRec32[0];
			fRec30[1] = fRec30[0];
			fRec29[1] = fRec29[0];
			iRec28[1] = iRec28[0];
			fRec27[1] = fRec27[0];
			iRec26[1] = iRec26[0];
			iRec25[1] = iRec25[0];
			iVec7[1] = iVec7[0];
			fVec6[1] = fVec6[0];
			fRec20[1] = fRec20[0];
			fVec4[1] = fVec4[0];
			fRec21[1] = fRec21[0];
			fRec18[1] = fRec18[0];
			fRec1[2] = fRec1[1]; fRec1[1] = fRec1[0];
			fRec3[1] = fRec3[0];
			fRec13[1] = fRec13[0];
			fRec17[1] = fRec17[0];
			fRec16[1] = fRec16[0];
			fRec15[1] = fRec15[0];
			iRec14[1] = iRec14[0];
			iVec3[1] = iVec3[0];
			fRec2[2] = fRec2[1]; fRec2[1] = fRec2[0];
			fRec11[1] = fRec11[0];
			fRec12[1] = fRec12[0];
			fRec10[1] = fRec10[0];
			fRec9[1] = fRec9[0];
			iRec8[1] = iRec8[0];
			fRec7[1] = fRec7[0];
			iRec6[1] = iRec6[0];
			iRec4[1] = iRec4[0];
			iRec5[1] = iRec5[0];
			iVec2[1] = iVec2[0];
			fVec1[1] = fVec1[0];
			iVec0[1] = iVec0[0];
		}
	}
};



FAUSTCLASS dsp;

static THD_WORKING_AREA(waSynthThread, 1024);
static thread_t* pThreadDSP = 0;
static void synthThread(void *arg) {  // THE SYNTH THREAD
	(void)arg;
	chRegSetThreadName("SYNTH");

	int32_t tmp;
	int count = CHANNEL_BUFFER_SIZE;
	float volume_filtered = 0.0f;

	//codec_pwrCtl(1);    // POWER ON
	//codec_muteCtl(0);   // MUTE OFF

	chEvtAddEvents(1);

	// initialize interface with dump, for when controls are not used
	synth_interface.acc_abs = &dump;
	synth_interface.acc_x = &dump;
	synth_interface.acc_y = &dump;
	synth_interface.acc_z = &dump;
	synth_interface.rot_x = &dump;
	synth_interface.rot_y = &dump;
	synth_interface.rot_z = &dump;
	synth_interface.pedal = &dump;

	// initialization
	dsp.init(SAMPLINGFREQ);

	// initialize interface
	dsp.buildUserInterfaceEmbedded();

	// computation loop
	while (true) {
		// palClearLine(LINE_LED_ALT);
		chEvtWaitOne(1);
		// palSetLine(LINE_LED_ALT);

		dsp.compute(count, NULL, output);

		volume_filtered = VOLUME_FILTER * volume_filtered + (1 - VOLUME_FILTER) * volume;

		// convert float to int with scale, clamp and round
		for (int n = 0; n < CHANNEL_BUFFER_SIZE; n++) {
			tmp = (int32_t)(output0[n] * volume_filtered * MAX_VAL);
			// enable LED on clip
			if (tmp <= -MAX_VAL) {
				tmp = -(MAX_VAL-1);
			} else if (tmp >= MAX_VAL) {
				tmp = MAX_VAL-1;
			}
			// make both audio channels the same
			outbuf[2*n] = outbuf[2*n+1] = tmp * (1<<8);
		}

		//if (--n <= 0) {
		//	palToggleLine(LINE_LED1);       /* Orange.  */
		//	n = 100;
		//}

		// TODO: synth_tick better called here or in main?
		// synth_tick();

		if (chThdShouldTerminateX()) break;
	}

	//codec_muteCtl(1);
	//codec_pwrCtl(0);

	pThreadDSP=NULL;
	palToggleLine(LINE_LED1);
};

void start_synth_thread(void) {
	pThreadDSP = chThdCreateStatic(waSynthThread, sizeof(waSynthThread), NORMALPRIO+2, synthThread, NULL);
}

void computebufI(int32_t *inp, int32_t *outp) {
  int i;
  //for (i = 0; i < 32; i++) {
  //  inbuf[i] = inp[i];
  //}
  outbuf = outp;
  inbuf = inp;
  if (pThreadDSP) {
    chSysLockFromISR();
    chEvtSignalI(pThreadDSP, (eventmask_t)1);
    chSysUnlockFromISR();
  }
  else
    for (i = 0; i < PLAYBACK_BUFFER_SIZE; i++) {
      outp[i] = (i - PLAYBACK_BUFFER_SIZE / 2) * 1<<22;
      // square wave 34952 * (1<<8) * 2 * ((i>PLAYBACK_BUFFER_SIZE/2)-0.5);
      // saw ware (i - PLAYBACK_BUFFER_SIZE / 2) * 100000; // testing noise 0;
    }
}
